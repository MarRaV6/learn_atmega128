
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000cb8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c44  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000022  00800100  00800100  00000cb8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000cb8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ce8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00000d24  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001042  00000000  00000000  00000d84  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000947  00000000  00000000  00001dc6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000049d  00000000  00000000  0000270d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c0  00000000  00000000  00002bac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000588  00000000  00000000  00002c6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006f2  00000000  00000000  000031f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000038e6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	86 c0       	rjmp	.+268    	; 0x10e <__ctors_end>
   2:	00 00       	nop
   4:	a1 c0       	rjmp	.+322    	; 0x148 <__bad_interrupt>
   6:	00 00       	nop
   8:	9f c0       	rjmp	.+318    	; 0x148 <__bad_interrupt>
   a:	00 00       	nop
   c:	9d c0       	rjmp	.+314    	; 0x148 <__bad_interrupt>
   e:	00 00       	nop
  10:	9b c0       	rjmp	.+310    	; 0x148 <__bad_interrupt>
  12:	00 00       	nop
  14:	99 c0       	rjmp	.+306    	; 0x148 <__bad_interrupt>
  16:	00 00       	nop
  18:	97 c0       	rjmp	.+302    	; 0x148 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	95 c0       	rjmp	.+298    	; 0x148 <__bad_interrupt>
  1e:	00 00       	nop
  20:	93 c0       	rjmp	.+294    	; 0x148 <__bad_interrupt>
  22:	00 00       	nop
  24:	91 c0       	rjmp	.+290    	; 0x148 <__bad_interrupt>
  26:	00 00       	nop
  28:	8f c0       	rjmp	.+286    	; 0x148 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	8d c0       	rjmp	.+282    	; 0x148 <__bad_interrupt>
  2e:	00 00       	nop
  30:	8b c0       	rjmp	.+278    	; 0x148 <__bad_interrupt>
  32:	00 00       	nop
  34:	89 c0       	rjmp	.+274    	; 0x148 <__bad_interrupt>
  36:	00 00       	nop
  38:	87 c0       	rjmp	.+270    	; 0x148 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	85 c0       	rjmp	.+266    	; 0x148 <__bad_interrupt>
  3e:	00 00       	nop
  40:	83 c0       	rjmp	.+262    	; 0x148 <__bad_interrupt>
  42:	00 00       	nop
  44:	81 c0       	rjmp	.+258    	; 0x148 <__bad_interrupt>
  46:	00 00       	nop
  48:	7f c0       	rjmp	.+254    	; 0x148 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	7d c0       	rjmp	.+250    	; 0x148 <__bad_interrupt>
  4e:	00 00       	nop
  50:	7b c0       	rjmp	.+246    	; 0x148 <__bad_interrupt>
  52:	00 00       	nop
  54:	79 c0       	rjmp	.+242    	; 0x148 <__bad_interrupt>
  56:	00 00       	nop
  58:	77 c0       	rjmp	.+238    	; 0x148 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	75 c0       	rjmp	.+234    	; 0x148 <__bad_interrupt>
  5e:	00 00       	nop
  60:	73 c0       	rjmp	.+230    	; 0x148 <__bad_interrupt>
  62:	00 00       	nop
  64:	71 c0       	rjmp	.+226    	; 0x148 <__bad_interrupt>
  66:	00 00       	nop
  68:	6f c0       	rjmp	.+222    	; 0x148 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	6d c0       	rjmp	.+218    	; 0x148 <__bad_interrupt>
  6e:	00 00       	nop
  70:	6b c0       	rjmp	.+214    	; 0x148 <__bad_interrupt>
  72:	00 00       	nop
  74:	69 c0       	rjmp	.+210    	; 0x148 <__bad_interrupt>
  76:	00 00       	nop
  78:	67 c0       	rjmp	.+206    	; 0x148 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	65 c0       	rjmp	.+202    	; 0x148 <__bad_interrupt>
  7e:	00 00       	nop
  80:	63 c0       	rjmp	.+198    	; 0x148 <__bad_interrupt>
  82:	00 00       	nop
  84:	61 c0       	rjmp	.+194    	; 0x148 <__bad_interrupt>
  86:	00 00       	nop
  88:	5f c0       	rjmp	.+190    	; 0x148 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	07 63       	ori	r16, 0x37	; 55
  8e:	42 36       	cpi	r20, 0x62	; 98
  90:	b7 9b       	sbis	0x16, 7	; 22
  92:	d8 a7       	std	Y+40, r29	; 0x28
  94:	1a 39       	cpi	r17, 0x9A	; 154
  96:	68 56       	subi	r22, 0x68	; 104
  98:	18 ae       	std	Y+56, r1	; 0x38
  9a:	ba ab       	std	Y+50, r27	; 0x32
  9c:	55 8c       	ldd	r5, Z+29	; 0x1d
  9e:	1d 3c       	cpi	r17, 0xCD	; 205
  a0:	b7 cc       	rjmp	.-1682   	; 0xfffffa10 <__eeprom_end+0xff7efa10>
  a2:	57 63       	ori	r21, 0x37	; 55
  a4:	bd 6d       	ori	r27, 0xDD	; 221
  a6:	ed fd       	.word	0xfded	; ????
  a8:	75 3e       	cpi	r23, 0xE5	; 229
  aa:	f6 17       	cp	r31, r22
  ac:	72 31       	cpi	r23, 0x12	; 18
  ae:	bf 00       	.word	0x00bf	; ????
  b0:	00 00       	nop
  b2:	80 3f       	cpi	r24, 0xF0	; 240
  b4:	08 00       	.word	0x0008	; ????
  b6:	00 00       	nop
  b8:	be 92       	st	-X, r11
  ba:	24 49       	sbci	r18, 0x94	; 148
  bc:	12 3e       	cpi	r17, 0xE2	; 226
  be:	ab aa       	std	Y+51, r10	; 0x33
  c0:	aa 2a       	or	r10, r26
  c2:	be cd       	rjmp	.-1156   	; 0xfffffc40 <__eeprom_end+0xff7efc40>
  c4:	cc cc       	rjmp	.-1640   	; 0xfffffa5e <__eeprom_end+0xff7efa5e>
  c6:	4c 3e       	cpi	r20, 0xEC	; 236
  c8:	00 00       	nop
  ca:	00 80       	ld	r0, Z
  cc:	be ab       	std	Y+54, r27	; 0x36
  ce:	aa aa       	std	Y+50, r10	; 0x32
  d0:	aa 3e       	cpi	r26, 0xEA	; 234
  d2:	00 00       	nop
  d4:	00 00       	nop
  d6:	bf 00       	.word	0x00bf	; ????
  d8:	00 00       	nop
  da:	80 3f       	cpi	r24, 0xF0	; 240
  dc:	00 00       	nop
  de:	00 00       	nop
  e0:	00 08       	sbc	r0, r0
  e2:	41 78       	andi	r20, 0x81	; 129
  e4:	d3 bb       	out	0x13, r29	; 19
  e6:	43 87       	std	Z+11, r20	; 0x0b
  e8:	d1 13       	cpse	r29, r17
  ea:	3d 19       	sub	r19, r13
  ec:	0e 3c       	cpi	r16, 0xCE	; 206
  ee:	c3 bd       	out	0x23, r28	; 35
  f0:	42 82       	std	Z+2, r4	; 0x02
  f2:	ad 2b       	or	r26, r29
  f4:	3e 68       	ori	r19, 0x8E	; 142
  f6:	ec 82       	std	Y+4, r14	; 0x04
  f8:	76 be       	out	0x36, r7	; 54
  fa:	d9 8f       	std	Y+25, r29	; 0x19
  fc:	e1 a9       	ldd	r30, Z+49	; 0x31
  fe:	3e 4c       	sbci	r19, 0xCE	; 206
 100:	80 ef       	ldi	r24, 0xF0	; 240
 102:	ff be       	out	0x3f, r15	; 63
 104:	01 c4       	rjmp	.+2050   	; 0x908 <__mulsf3_pse+0x8a>
 106:	ff 7f       	andi	r31, 0xFF	; 255
 108:	3f 00       	.word	0x003f	; ????
 10a:	00 00       	nop
	...

0000010e <__ctors_end>:
 10e:	11 24       	eor	r1, r1
 110:	1f be       	out	0x3f, r1	; 63
 112:	cf ef       	ldi	r28, 0xFF	; 255
 114:	d0 e1       	ldi	r29, 0x10	; 16
 116:	de bf       	out	0x3e, r29	; 62
 118:	cd bf       	out	0x3d, r28	; 61

0000011a <__do_copy_data>:
 11a:	11 e0       	ldi	r17, 0x01	; 1
 11c:	a0 e0       	ldi	r26, 0x00	; 0
 11e:	b1 e0       	ldi	r27, 0x01	; 1
 120:	e4 e4       	ldi	r30, 0x44	; 68
 122:	fc e0       	ldi	r31, 0x0C	; 12
 124:	00 e0       	ldi	r16, 0x00	; 0
 126:	0b bf       	out	0x3b, r16	; 59
 128:	02 c0       	rjmp	.+4      	; 0x12e <__do_copy_data+0x14>
 12a:	07 90       	elpm	r0, Z+
 12c:	0d 92       	st	X+, r0
 12e:	a0 30       	cpi	r26, 0x00	; 0
 130:	b1 07       	cpc	r27, r17
 132:	d9 f7       	brne	.-10     	; 0x12a <__do_copy_data+0x10>

00000134 <__do_clear_bss>:
 134:	21 e0       	ldi	r18, 0x01	; 1
 136:	a0 e0       	ldi	r26, 0x00	; 0
 138:	b1 e0       	ldi	r27, 0x01	; 1
 13a:	01 c0       	rjmp	.+2      	; 0x13e <.do_clear_bss_start>

0000013c <.do_clear_bss_loop>:
 13c:	1d 92       	st	X+, r1

0000013e <.do_clear_bss_start>:
 13e:	a2 32       	cpi	r26, 0x22	; 34
 140:	b2 07       	cpc	r27, r18
 142:	e1 f7       	brne	.-8      	; 0x13c <.do_clear_bss_loop>
 144:	c5 d0       	rcall	.+394    	; 0x2d0 <main>
 146:	7c c5       	rjmp	.+2808   	; 0xc40 <_exit>

00000148 <__bad_interrupt>:
 148:	5b cf       	rjmp	.-330    	; 0x0 <__vectors>

0000014a <_Z7lcd_comh>:

//------------------------------------------------------------------------------------------------------------------
//Функция записи команды в LCD
void lcd_com(unsigned char p)					// 'p' байт команды
{
	LCD_PORT &= ~(1 << RS);						// RS = 0 (запись команд)
 14a:	aa 98       	cbi	0x15, 2	; 21
	LCD_PORT |= (1 << EN);						// EN = 1 (начало записи команды в LCD)
 14c:	ab 9a       	sbi	0x15, 3	; 21
	LCD_PORT &= 0x0F; LCD_PORT |= (p & 0xF0);	// старший ниббл
 14e:	95 b3       	in	r25, 0x15	; 21
 150:	9f 70       	andi	r25, 0x0F	; 15
 152:	95 bb       	out	0x15, r25	; 21
 154:	95 b3       	in	r25, 0x15	; 21
 156:	28 2f       	mov	r18, r24
 158:	20 7f       	andi	r18, 0xF0	; 240
 15a:	92 2b       	or	r25, r18
 15c:	95 bb       	out	0x15, r25	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 15e:	e3 ec       	ldi	r30, 0xC3	; 195
 160:	f9 e0       	ldi	r31, 0x09	; 9
 162:	31 97       	sbiw	r30, 0x01	; 1
 164:	f1 f7       	brne	.-4      	; 0x162 <_Z7lcd_comh+0x18>
 166:	00 c0       	rjmp	.+0      	; 0x168 <_Z7lcd_comh+0x1e>
 168:	00 00       	nop
	_delay_ms(1);
	LCD_PORT &= ~(1 << EN);						// EN = 0 (конец записи команды в LCD)
 16a:	ab 98       	cbi	0x15, 3	; 21
 16c:	e3 ec       	ldi	r30, 0xC3	; 195
 16e:	f9 e0       	ldi	r31, 0x09	; 9
 170:	31 97       	sbiw	r30, 0x01	; 1
 172:	f1 f7       	brne	.-4      	; 0x170 <_Z7lcd_comh+0x26>
 174:	00 c0       	rjmp	.+0      	; 0x176 <_Z7lcd_comh+0x2c>
 176:	00 00       	nop
	_delay_ms(1);
	LCD_PORT |= (1 << EN);						// EN = 1 (начало записи команды в LCD)
 178:	ab 9a       	sbi	0x15, 3	; 21
	LCD_PORT &= 0x0F; LCD_PORT |= (p << 4);		// младший ниббл
 17a:	95 b3       	in	r25, 0x15	; 21
 17c:	9f 70       	andi	r25, 0x0F	; 15
 17e:	95 bb       	out	0x15, r25	; 21
 180:	25 b3       	in	r18, 0x15	; 21
 182:	f0 e1       	ldi	r31, 0x10	; 16
 184:	8f 9f       	mul	r24, r31
 186:	c0 01       	movw	r24, r0
 188:	11 24       	eor	r1, r1
 18a:	82 2b       	or	r24, r18
 18c:	85 bb       	out	0x15, r24	; 21
 18e:	83 ec       	ldi	r24, 0xC3	; 195
 190:	99 e0       	ldi	r25, 0x09	; 9
 192:	01 97       	sbiw	r24, 0x01	; 1
 194:	f1 f7       	brne	.-4      	; 0x192 <_Z7lcd_comh+0x48>
 196:	00 c0       	rjmp	.+0      	; 0x198 <_Z7lcd_comh+0x4e>
 198:	00 00       	nop
	_delay_ms(1);
	LCD_PORT &= ~(1 << EN);						// EN = 0 (конец записи команды в LCD)
 19a:	ab 98       	cbi	0x15, 3	; 21
 19c:	e3 ec       	ldi	r30, 0xC3	; 195
 19e:	f9 e0       	ldi	r31, 0x09	; 9
 1a0:	31 97       	sbiw	r30, 0x01	; 1
 1a2:	f1 f7       	brne	.-4      	; 0x1a0 <_Z7lcd_comh+0x56>
 1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <_Z7lcd_comh+0x5c>
 1a6:	00 00       	nop
 1a8:	08 95       	ret

000001aa <_Z7lcd_dath>:


//Функция записи данных в LCD
void lcd_dat(unsigned char p)					// 'p' байт данных
{
	LCD_PORT |= (1 << RS)|(1 << EN);			// RS = 1 (запись данных), EN - 1 (начало записи команды в LCD)
 1aa:	95 b3       	in	r25, 0x15	; 21
 1ac:	9c 60       	ori	r25, 0x0C	; 12
 1ae:	95 bb       	out	0x15, r25	; 21
	LCD_PORT &= 0x0F; LCD_PORT |= (p & 0xF0);	// старший ниббл
 1b0:	95 b3       	in	r25, 0x15	; 21
 1b2:	9f 70       	andi	r25, 0x0F	; 15
 1b4:	95 bb       	out	0x15, r25	; 21
 1b6:	95 b3       	in	r25, 0x15	; 21
 1b8:	28 2f       	mov	r18, r24
 1ba:	20 7f       	andi	r18, 0xF0	; 240
 1bc:	92 2b       	or	r25, r18
 1be:	95 bb       	out	0x15, r25	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1c0:	36 ea       	ldi	r19, 0xA6	; 166
 1c2:	3a 95       	dec	r19
 1c4:	f1 f7       	brne	.-4      	; 0x1c2 <_Z7lcd_dath+0x18>
 1c6:	00 c0       	rjmp	.+0      	; 0x1c8 <_Z7lcd_dath+0x1e>
	_delay_us(50);
	LCD_PORT &= ~(1 << EN);						// EN = 0 (конец записи команды в LCD)
 1c8:	ab 98       	cbi	0x15, 3	; 21
 1ca:	96 ea       	ldi	r25, 0xA6	; 166
 1cc:	9a 95       	dec	r25
 1ce:	f1 f7       	brne	.-4      	; 0x1cc <_Z7lcd_dath+0x22>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <_Z7lcd_dath+0x28>
	_delay_us(50);
	LCD_PORT |= (1 << EN);						// EN = 1 (начало записи команды в LCD)
 1d2:	ab 9a       	sbi	0x15, 3	; 21
	LCD_PORT &= 0x0F; LCD_PORT |= (p << 4);		// младший ниббл
 1d4:	95 b3       	in	r25, 0x15	; 21
 1d6:	9f 70       	andi	r25, 0x0F	; 15
 1d8:	95 bb       	out	0x15, r25	; 21
 1da:	25 b3       	in	r18, 0x15	; 21
 1dc:	30 e1       	ldi	r19, 0x10	; 16
 1de:	83 9f       	mul	r24, r19
 1e0:	c0 01       	movw	r24, r0
 1e2:	11 24       	eor	r1, r1
 1e4:	82 2b       	or	r24, r18
 1e6:	85 bb       	out	0x15, r24	; 21
 1e8:	86 ea       	ldi	r24, 0xA6	; 166
 1ea:	8a 95       	dec	r24
 1ec:	f1 f7       	brne	.-4      	; 0x1ea <_Z7lcd_dath+0x40>
 1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <_Z7lcd_dath+0x46>
	_delay_us(50);
	LCD_PORT &= ~(1 << EN);						// EN = 0 (конец записи команды в LCD)
 1f0:	ab 98       	cbi	0x15, 3	; 21
 1f2:	96 ea       	ldi	r25, 0xA6	; 166
 1f4:	9a 95       	dec	r25
 1f6:	f1 f7       	brne	.-4      	; 0x1f4 <_Z7lcd_dath+0x4a>
 1f8:	00 c0       	rjmp	.+0      	; 0x1fa <_Z7lcd_dath+0x50>
 1fa:	08 95       	ret

000001fc <_Z9lcd_clearv>:
}

//Функция очистки дисплея
void lcd_clear(void)
{
	lcd_com(0x01);
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	a5 df       	rcall	.-182    	; 0x14a <_Z7lcd_comh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 200:	83 ec       	ldi	r24, 0xC3	; 195
 202:	99 e0       	ldi	r25, 0x09	; 9
 204:	01 97       	sbiw	r24, 0x01	; 1
 206:	f1 f7       	brne	.-4      	; 0x204 <_Z9lcd_clearv+0x8>
 208:	00 c0       	rjmp	.+0      	; 0x20a <_Z9lcd_clearv+0xe>
 20a:	00 00       	nop
 20c:	08 95       	ret

0000020e <_Z8lcd_initv>:
}

//Функция инициализации LCD
void lcd_init(void)
{
	lcd_com(0x33);   //режим 8 бит, мигающий курсор
 20e:	83 e3       	ldi	r24, 0x33	; 51
 210:	9c df       	rcall	.-200    	; 0x14a <_Z7lcd_comh>
 212:	87 ea       	ldi	r24, 0xA7	; 167
 214:	91 e6       	ldi	r25, 0x61	; 97
 216:	01 97       	sbiw	r24, 0x01	; 1
 218:	f1 f7       	brne	.-4      	; 0x216 <_Z8lcd_initv+0x8>
 21a:	00 c0       	rjmp	.+0      	; 0x21c <_Z8lcd_initv+0xe>
 21c:	00 00       	nop
	_delay_ms(10);
	lcd_com(0x32);   //режим 4 бит, мигающий курсор
 21e:	82 e3       	ldi	r24, 0x32	; 50
 220:	94 df       	rcall	.-216    	; 0x14a <_Z7lcd_comh>
 222:	83 ed       	ldi	r24, 0xD3	; 211
 224:	90 e3       	ldi	r25, 0x30	; 48
 226:	01 97       	sbiw	r24, 0x01	; 1
 228:	f1 f7       	brne	.-4      	; 0x226 <_Z8lcd_initv+0x18>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <_Z8lcd_initv+0x1e>
	_delay_ms(5);
	lcd_com(0x28);   // шина 4 бит, LCD - 2 строки
 22c:	00 00       	nop
 22e:	88 e2       	ldi	r24, 0x28	; 40
 230:	8c df       	rcall	.-232    	; 0x14a <_Z7lcd_comh>
 232:	83 ed       	ldi	r24, 0xD3	; 211
 234:	90 e3       	ldi	r25, 0x30	; 48
 236:	01 97       	sbiw	r24, 0x01	; 1
 238:	f1 f7       	brne	.-4      	; 0x236 <_Z8lcd_initv+0x28>
 23a:	00 c0       	rjmp	.+0      	; 0x23c <_Z8lcd_initv+0x2e>
	_delay_ms(5);
	lcd_com(0x08);   // полное выключение дисплея
 23c:	00 00       	nop
 23e:	88 e0       	ldi	r24, 0x08	; 8
 240:	84 df       	rcall	.-248    	; 0x14a <_Z7lcd_comh>
 242:	83 ed       	ldi	r24, 0xD3	; 211
 244:	90 e3       	ldi	r25, 0x30	; 48
 246:	01 97       	sbiw	r24, 0x01	; 1
 248:	f1 f7       	brne	.-4      	; 0x246 <_Z8lcd_initv+0x38>
	_delay_ms(5);
	lcd_clear();
 24a:	00 c0       	rjmp	.+0      	; 0x24c <_Z8lcd_initv+0x3e>
	lcd_com(0x06);   // сдвиг курсора вправо
 24c:	00 00       	nop
 24e:	d6 df       	rcall	.-84     	; 0x1fc <_Z9lcd_clearv>
 250:	86 e0       	ldi	r24, 0x06	; 6
	lcd_com(0x0C);	 // включение дисплея
 252:	7b df       	rcall	.-266    	; 0x14a <_Z7lcd_comh>
 254:	8c e0       	ldi	r24, 0x0C	; 12
 256:	79 cf       	rjmp	.-270    	; 0x14a <_Z7lcd_comh>
 258:	08 95       	ret

0000025a <_Z5go_tocc>:
}

//Функция перевода курсора на строку line и позицию pos
void go_to(char pos, char line)
{
	char addr = 0x40 * line + pos;
 25a:	90 e4       	ldi	r25, 0x40	; 64
 25c:	69 9f       	mul	r22, r25
 25e:	80 0d       	add	r24, r0
 260:	11 24       	eor	r1, r1
	addr |= 0x80;
	lcd_com(addr);
 262:	80 68       	ori	r24, 0x80	; 128
 264:	72 cf       	rjmp	.-284    	; 0x14a <_Z7lcd_comh>
 266:	08 95       	ret

00000268 <_Z9lcd_arrayccPKc>:
}

//Функция вывода строки на LCD, начиная с координат X и Y
void lcd_array( char x, char y, const char *str )
{
 268:	cf 93       	push	r28
 26a:	df 93       	push	r29
 26c:	ea 01       	movw	r28, r20
	go_to(x,y);
 26e:	f5 df       	rcall	.-22     	; 0x25a <_Z5go_tocc>
	while( *str )			//цикл пока указатель существует
 270:	88 81       	ld	r24, Y
 272:	88 23       	and	r24, r24
 274:	29 f0       	breq	.+10     	; 0x280 <_Z9lcd_arrayccPKc+0x18>
	lcd_dat( *str++ );	//выводить строку
 276:	21 96       	adiw	r28, 0x01	; 1
 278:	98 df       	rcall	.-208    	; 0x1aa <_Z7lcd_dath>

//Функция вывода строки на LCD, начиная с координат X и Y
void lcd_array( char x, char y, const char *str )
{
	go_to(x,y);
	while( *str )			//цикл пока указатель существует
 27a:	89 91       	ld	r24, Y+
 27c:	81 11       	cpse	r24, r1
 27e:	fc cf       	rjmp	.-8      	; 0x278 <_Z9lcd_arrayccPKc+0x10>
	lcd_dat( *str++ );	//выводить строку
}
 280:	df 91       	pop	r29
 282:	cf 91       	pop	r28
 284:	08 95       	ret

00000286 <_Z8read_adch>:
}

// Read the AD conversion result
unsigned int read_adc(unsigned char adc_input)
{
	ADMUX=adc_input | ADC_VREF_TYPE;
 286:	80 64       	ori	r24, 0x40	; 64
 288:	87 b9       	out	0x07, r24	; 7
 28a:	87 ea       	ldi	r24, 0xA7	; 167
 28c:	91 e6       	ldi	r25, 0x61	; 97
 28e:	01 97       	sbiw	r24, 0x01	; 1
 290:	f1 f7       	brne	.-4      	; 0x28e <_Z8read_adch+0x8>
 292:	00 c0       	rjmp	.+0      	; 0x294 <_Z8read_adch+0xe>
 294:	00 00       	nop
	// Delay needed for the stabilization of the ADC input voltage
	_delay_ms(10);
	// Start the AD conversion
	ADCSRA|=(1<<ADSC);
 296:	36 9a       	sbi	0x06, 6	; 6
	// Wait for the AD conversion to complete
	while ((ADCSRA & (1<<ADIF))==0);
 298:	34 9b       	sbis	0x06, 4	; 6
 29a:	fe cf       	rjmp	.-4      	; 0x298 <_Z8read_adch+0x12>
	ADCSRA|=(1<<ADIF);
 29c:	34 9a       	sbi	0x06, 4	; 6
	return ADCW;
 29e:	84 b1       	in	r24, 0x04	; 4
 2a0:	95 b1       	in	r25, 0x05	; 5
}
 2a2:	08 95       	ret

000002a4 <_Z8adc_inith>:

// PIN - номер порта F от 0 до 7
void adc_init(uint8_t PIN) {
	DDRF &= ~(1<<PIN); // вывод PF с номером PIN настроить на ввод
 2a4:	e1 e6       	ldi	r30, 0x61	; 97
 2a6:	f0 e0       	ldi	r31, 0x00	; 0
 2a8:	90 81       	ld	r25, Z
 2aa:	21 e0       	ldi	r18, 0x01	; 1
 2ac:	30 e0       	ldi	r19, 0x00	; 0
 2ae:	08 2e       	mov	r0, r24
 2b0:	02 c0       	rjmp	.+4      	; 0x2b6 <_Z8adc_inith+0x12>
 2b2:	22 0f       	add	r18, r18
 2b4:	33 1f       	adc	r19, r19
 2b6:	0a 94       	dec	r0
 2b8:	e2 f7       	brpl	.-8      	; 0x2b2 <_Z8adc_inith+0xe>
 2ba:	20 95       	com	r18
 2bc:	29 23       	and	r18, r25
 2be:	20 83       	st	Z, r18
	// левое смещение, 8 битный АЦП
	// устанавливаем источник АЦП пин с номером PIN
	ADMUX |= (0<<REFS1) | (1<<REFS0) |(1<<ADLAR) | (PIN<<MUX0);
 2c0:	97 b1       	in	r25, 0x07	; 7
 2c2:	90 66       	ori	r25, 0x60	; 96
 2c4:	89 2b       	or	r24, r25
 2c6:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADEN) | // разрешение работы АЦП
	(1<<ADSC) | // запуск АЦП
	(1<<ADFR) | // автоматический режим АЦП
	(1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
 2c8:	86 b1       	in	r24, 0x06	; 6
 2ca:	87 6e       	ori	r24, 0xE7	; 231
 2cc:	86 b9       	out	0x06, r24	; 6
 2ce:	08 95       	ret

000002d0 <main>:
int speed = 7;				//Скорость движения точки

//------------------------------------------------------------------------------------------------------------------

int main(void)
{
 2d0:	cf 93       	push	r28
 2d2:	df 93       	push	r29
 2d4:	cd b7       	in	r28, 0x3d	; 61
 2d6:	de b7       	in	r29, 0x3e	; 62
 2d8:	28 97       	sbiw	r28, 0x08	; 8
 2da:	0f b6       	in	r0, 0x3f	; 63
 2dc:	f8 94       	cli
 2de:	de bf       	out	0x3e, r29	; 62
 2e0:	0f be       	out	0x3f, r0	; 63
 2e2:	cd bf       	out	0x3d, r28	; 61
	ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
	SFIOR=(0<<ACME);*/
	
	//Настройка портов
	
	DDRC = 0xFF;	//Порт C - выход (подключен LCD дисплей)
 2e4:	2f ef       	ldi	r18, 0xFF	; 255
 2e6:	24 bb       	out	0x14, r18	; 20
	PORTC = 0;
 2e8:	15 ba       	out	0x15, r1	; 21
	
	lcd_init(); //Инициализация дисплея
 2ea:	91 df       	rcall	.-222    	; 0x20e <_Z8lcd_initv>
	
	// глобально запретим прерывания
	cli();
 2ec:	f8 94       	cli
	DDRA = 0x00; // порта А полностью на ввод
 2ee:	1a ba       	out	0x1a, r1	; 26
	PORTA = 0x00;
 2f0:	1b ba       	out	0x1b, r1	; 27
	
	// DDRB = 0xFF;
	DDRD = 0xFF;
 2f2:	8f ef       	ldi	r24, 0xFF	; 255
 2f4:	81 bb       	out	0x11, r24	; 17
	PORTD = 0x00;
 2f6:	12 ba       	out	0x12, r1	; 18
	adc_init(3); // подключим АЦП к выводу PF3
 2f8:	83 e0       	ldi	r24, 0x03	; 3
 2fa:	d4 df       	rcall	.-88     	; 0x2a4 <_Z8adc_inith>
	// глобально разрешим прерывания
	sei();
 2fc:	78 94       	sei
	//uint8_t data;
	
	bool screen_for_temp = true;
	bool sreen_for_ust = false;
	int data;
	uint8_t ust = 30;
 2fe:	0f 2e       	mov	r0, r31
 300:	fe e1       	ldi	r31, 0x1E	; 30
 302:	3f 2e       	mov	r3, r31
 304:	f0 2d       	mov	r31, r0
	// глобально разрешим прерывания
	sei();
	//uint8_t data;
	
	bool screen_for_temp = true;
	bool sreen_for_ust = false;
 306:	81 2c       	mov	r8, r1
	adc_init(3); // подключим АЦП к выводу PF3
	// глобально разрешим прерывания
	sei();
	//uint8_t data;
	
	bool screen_for_temp = true;
 308:	99 24       	eor	r9, r9
 30a:	93 94       	inc	r9
	int data;
	uint8_t ust = 30;
	
	while (1) {
		int dat = read_adc(3);
		double datADC = 1023 - dat;
 30c:	0f 2e       	mov	r0, r31
 30e:	aa 24       	eor	r10, r10
 310:	aa 94       	dec	r10
 312:	f3 e0       	ldi	r31, 0x03	; 3
 314:	bf 2e       	mov	r11, r31
 316:	f0 2d       	mov	r31, r0
		data = 0.0000000268 * pow(datADC, 4) - 0.00004827 * pow(datADC, 3) + 0.031424 * pow(datADC, 2) - 8.404671 * datADC + 801.582; //fabs(datADC/3.15 + 43 - 111);
		
		if (PINA & (1<<0)) {
			sreen_for_ust = true;
 318:	44 24       	eor	r4, r4
 31a:	43 94       	inc	r4
			screen_for_temp = false;
 31c:	51 2c       	mov	r5, r1
			ust = ust - 1;
		};
		
		if (screen_for_temp)
		{
			upper_line[0] = 'T';
 31e:	01 e1       	ldi	r16, 0x11	; 17
 320:	11 e0       	ldi	r17, 0x01	; 1
			upper_line[1] = 'E';
			upper_line[2] = 'M';
			upper_line[3] = 'P';
			upper_line[4] = ' ';
 322:	68 94       	set
 324:	22 24       	eor	r2, r2
	bool sreen_for_ust = false;
	int data;
	uint8_t ust = 30;
	
	while (1) {
		int dat = read_adc(3);
 326:	25 f8       	bld	r2, 5
 328:	83 e0       	ldi	r24, 0x03	; 3
 32a:	ad df       	rcall	.-166    	; 0x286 <_Z8read_adch>
		double datADC = 1023 - dat;
 32c:	35 01       	movw	r6, r10
 32e:	68 1a       	sub	r6, r24
 330:	79 0a       	sbc	r7, r25
 332:	b3 01       	movw	r22, r6
 334:	07 2c       	mov	r0, r7
 336:	00 0c       	add	r0, r0
 338:	88 0b       	sbc	r24, r24
 33a:	99 0b       	sbc	r25, r25
 33c:	06 d2       	rcall	.+1036   	; 0x74a <__floatsisf>
 33e:	6b 01       	movw	r12, r22
 340:	7c 01       	movw	r14, r24
		data = 0.0000000268 * pow(datADC, 4) - 0.00004827 * pow(datADC, 3) + 0.031424 * pow(datADC, 2) - 8.404671 * datADC + 801.582; //fabs(datADC/3.15 + 43 - 111);
 342:	20 e0       	ldi	r18, 0x00	; 0
 344:	30 e0       	ldi	r19, 0x00	; 0
 346:	40 e8       	ldi	r20, 0x80	; 128
 348:	50 e4       	ldi	r21, 0x40	; 64
 34a:	ee d2       	rcall	.+1500   	; 0x928 <pow>
 34c:	69 83       	std	Y+1, r22	; 0x01
 34e:	7a 83       	std	Y+2, r23	; 0x02
 350:	8b 83       	std	Y+3, r24	; 0x03
 352:	9c 83       	std	Y+4, r25	; 0x04
 354:	20 e0       	ldi	r18, 0x00	; 0
 356:	30 e0       	ldi	r19, 0x00	; 0
 358:	40 e4       	ldi	r20, 0x40	; 64
 35a:	50 e4       	ldi	r21, 0x40	; 64
 35c:	c7 01       	movw	r24, r14
 35e:	b6 01       	movw	r22, r12
 360:	e3 d2       	rcall	.+1478   	; 0x928 <pow>
 362:	6d 83       	std	Y+5, r22	; 0x05
 364:	7e 83       	std	Y+6, r23	; 0x06
 366:	8f 83       	std	Y+7, r24	; 0x07
 368:	98 87       	std	Y+8, r25	; 0x08
		
		if (PINA & (1<<0)) {
 36a:	c8 9b       	sbis	0x19, 0	; 25
 36c:	02 c0       	rjmp	.+4      	; 0x372 <main+0xa2>
			sreen_for_ust = true;
 36e:	84 2c       	mov	r8, r4
			screen_for_temp = false;
 370:	95 2c       	mov	r9, r5
		};
		
		if (PINA & (1<<1)) {
 372:	c9 9b       	sbis	0x19, 1	; 25
 374:	02 c0       	rjmp	.+4      	; 0x37a <main+0xaa>
			sreen_for_ust = false;
 376:	85 2c       	mov	r8, r5
			screen_for_temp = true;
 378:	94 2c       	mov	r9, r4
		};
		
		if (PINA & (1<<2)) {
 37a:	ca 99       	sbic	0x19, 2	; 25
			ust = ust + 1;
 37c:	33 94       	inc	r3
		};
		
		if (PINA & (1<<3)) {
 37e:	cb 99       	sbic	0x19, 3	; 25
			ust = ust - 1;
 380:	3a 94       	dec	r3
		};
		
		if (screen_for_temp)
 382:	99 20       	and	r9, r9
 384:	09 f4       	brne	.+2      	; 0x388 <main+0xb8>
 386:	6b c0       	rjmp	.+214    	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
	uint8_t ust = 30;
	
	while (1) {
		int dat = read_adc(3);
		double datADC = 1023 - dat;
		data = 0.0000000268 * pow(datADC, 4) - 0.00004827 * pow(datADC, 3) + 0.031424 * pow(datADC, 2) - 8.404671 * datADC + 801.582; //fabs(datADC/3.15 + 43 - 111);
 388:	23 ed       	ldi	r18, 0xD3	; 211
 38a:	35 e3       	ldi	r19, 0x35	; 53
 38c:	46 ee       	ldi	r20, 0xE6	; 230
 38e:	52 e3       	ldi	r21, 0x32	; 50
 390:	69 81       	ldd	r22, Y+1	; 0x01
 392:	7a 81       	ldd	r23, Y+2	; 0x02
 394:	8b 81       	ldd	r24, Y+3	; 0x03
 396:	9c 81       	ldd	r25, Y+4	; 0x04
 398:	64 d2       	rcall	.+1224   	; 0x862 <__mulsf3>
 39a:	69 83       	std	Y+1, r22	; 0x01
 39c:	7a 83       	std	Y+2, r23	; 0x02
 39e:	8b 83       	std	Y+3, r24	; 0x03
 3a0:	9c 83       	std	Y+4, r25	; 0x04
 3a2:	25 e8       	ldi	r18, 0x85	; 133
 3a4:	35 e7       	ldi	r19, 0x75	; 117
 3a6:	4a e4       	ldi	r20, 0x4A	; 74
 3a8:	58 e3       	ldi	r21, 0x38	; 56
 3aa:	6d 81       	ldd	r22, Y+5	; 0x05
 3ac:	7e 81       	ldd	r23, Y+6	; 0x06
 3ae:	8f 81       	ldd	r24, Y+7	; 0x07
 3b0:	98 85       	ldd	r25, Y+8	; 0x08
 3b2:	57 d2       	rcall	.+1198   	; 0x862 <__mulsf3>
 3b4:	9b 01       	movw	r18, r22
 3b6:	ac 01       	movw	r20, r24
 3b8:	69 81       	ldd	r22, Y+1	; 0x01
 3ba:	7a 81       	ldd	r23, Y+2	; 0x02
 3bc:	8b 81       	ldd	r24, Y+3	; 0x03
 3be:	9c 81       	ldd	r25, Y+4	; 0x04
 3c0:	c4 d0       	rcall	.+392    	; 0x54a <__subsf3>
 3c2:	69 83       	std	Y+1, r22	; 0x01
 3c4:	7a 83       	std	Y+2, r23	; 0x02
 3c6:	8b 83       	std	Y+3, r24	; 0x03
 3c8:	9c 83       	std	Y+4, r25	; 0x04
 3ca:	a7 01       	movw	r20, r14
 3cc:	96 01       	movw	r18, r12
 3ce:	c7 01       	movw	r24, r14
 3d0:	b6 01       	movw	r22, r12
 3d2:	47 d2       	rcall	.+1166   	; 0x862 <__mulsf3>
 3d4:	24 e7       	ldi	r18, 0x74	; 116
 3d6:	36 eb       	ldi	r19, 0xB6	; 182
 3d8:	40 e0       	ldi	r20, 0x00	; 0
 3da:	5d e3       	ldi	r21, 0x3D	; 61
 3dc:	42 d2       	rcall	.+1156   	; 0x862 <__mulsf3>
 3de:	9b 01       	movw	r18, r22
 3e0:	ac 01       	movw	r20, r24
 3e2:	69 81       	ldd	r22, Y+1	; 0x01
 3e4:	7a 81       	ldd	r23, Y+2	; 0x02
 3e6:	8b 81       	ldd	r24, Y+3	; 0x03
 3e8:	9c 81       	ldd	r25, Y+4	; 0x04
 3ea:	b0 d0       	rcall	.+352    	; 0x54c <__addsf3>
 3ec:	69 83       	std	Y+1, r22	; 0x01
 3ee:	7a 83       	std	Y+2, r23	; 0x02
 3f0:	8b 83       	std	Y+3, r24	; 0x03
 3f2:	9c 83       	std	Y+4, r25	; 0x04
 3f4:	28 e8       	ldi	r18, 0x88	; 136
 3f6:	39 e7       	ldi	r19, 0x79	; 121
 3f8:	46 e0       	ldi	r20, 0x06	; 6
 3fa:	51 e4       	ldi	r21, 0x41	; 65
 3fc:	c7 01       	movw	r24, r14
 3fe:	b6 01       	movw	r22, r12
 400:	30 d2       	rcall	.+1120   	; 0x862 <__mulsf3>
 402:	9b 01       	movw	r18, r22
 404:	ac 01       	movw	r20, r24
 406:	69 81       	ldd	r22, Y+1	; 0x01
 408:	7a 81       	ldd	r23, Y+2	; 0x02
 40a:	8b 81       	ldd	r24, Y+3	; 0x03
 40c:	9c 81       	ldd	r25, Y+4	; 0x04
 40e:	9d d0       	rcall	.+314    	; 0x54a <__subsf3>
 410:	2f e3       	ldi	r18, 0x3F	; 63
 412:	35 e6       	ldi	r19, 0x65	; 101
 414:	48 e4       	ldi	r20, 0x48	; 72
 416:	54 e4       	ldi	r21, 0x44	; 68
 418:	99 d0       	rcall	.+306    	; 0x54c <__addsf3>
 41a:	64 d1       	rcall	.+712    	; 0x6e4 <__fixsfsi>
 41c:	9b 01       	movw	r18, r22
			ust = ust - 1;
		};
		
		if (screen_for_temp)
		{
			upper_line[0] = 'T';
 41e:	84 e5       	ldi	r24, 0x54	; 84
 420:	f8 01       	movw	r30, r16
			upper_line[1] = 'E';
 422:	80 83       	st	Z, r24
 424:	95 e4       	ldi	r25, 0x45	; 69
			upper_line[2] = 'M';
 426:	91 83       	std	Z+1, r25	; 0x01
			upper_line[3] = 'P';
 428:	8d e4       	ldi	r24, 0x4D	; 77
 42a:	82 83       	std	Z+2, r24	; 0x02
			upper_line[4] = ' ';
 42c:	90 e5       	ldi	r25, 0x50	; 80
			upper_line[5] = '=';
 42e:	93 83       	std	Z+3, r25	; 0x03
			upper_line[6] = ' ';
 430:	24 82       	std	Z+4, r2	; 0x04
			upper_line[7] = data/100+0x30;
 432:	8d e3       	ldi	r24, 0x3D	; 61
 434:	85 83       	std	Z+5, r24	; 0x05
 436:	26 82       	std	Z+6, r2	; 0x06
 438:	c9 01       	movw	r24, r18
 43a:	64 e6       	ldi	r22, 0x64	; 100
 43c:	70 e0       	ldi	r23, 0x00	; 0
 43e:	d9 d3       	rcall	.+1970   	; 0xbf2 <__divmodhi4>
			upper_line[8] = (data/10)%10+0x30; //1024/1000=10.24/10=24
 440:	60 5d       	subi	r22, 0xD0	; 208
 442:	67 83       	std	Z+7, r22	; 0x07
 444:	c9 01       	movw	r24, r18
 446:	6a e0       	ldi	r22, 0x0A	; 10
 448:	70 e0       	ldi	r23, 0x00	; 0
 44a:	d3 d3       	rcall	.+1958   	; 0xbf2 <__divmodhi4>
 44c:	28 2f       	mov	r18, r24
 44e:	cb 01       	movw	r24, r22
 450:	6a e0       	ldi	r22, 0x0A	; 10
 452:	70 e0       	ldi	r23, 0x00	; 0
 454:	ce d3       	rcall	.+1948   	; 0xbf2 <__divmodhi4>
 456:	80 5d       	subi	r24, 0xD0	; 208
 458:	80 87       	std	Z+8, r24	; 0x08
			upper_line[9] = (data)%10+0x30;
 45a:	20 5d       	subi	r18, 0xD0	; 208
 45c:	21 87       	std	Z+9, r18	; 0x09
		};
		 
		if (sreen_for_ust) {
 45e:	88 20       	and	r8, r8
 460:	a9 f1       	breq	.+106    	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
			upper_line[0] = 'U';
 462:	85 e5       	ldi	r24, 0x55	; 85
 464:	f8 01       	movw	r30, r16
 466:	80 83       	st	Z, r24
			upper_line[1] = 'S';
 468:	83 e5       	ldi	r24, 0x53	; 83
 46a:	81 83       	std	Z+1, r24	; 0x01
			upper_line[2] = 'T';
 46c:	24 e5       	ldi	r18, 0x54	; 84
 46e:	22 83       	std	Z+2, r18	; 0x02
			upper_line[3] = ' ';
 470:	23 82       	std	Z+3, r2	; 0x03
			upper_line[4] = '=';
 472:	8d e3       	ldi	r24, 0x3D	; 61
 474:	84 83       	std	Z+4, r24	; 0x04
			upper_line[5] = ' ';
 476:	25 82       	std	Z+5, r2	; 0x05
			upper_line[6] = ust/100+0x30;
 478:	89 e2       	ldi	r24, 0x29	; 41
 47a:	38 9e       	mul	r3, r24
 47c:	81 2d       	mov	r24, r1
 47e:	11 24       	eor	r1, r1
 480:	82 95       	swap	r24
 482:	8f 70       	andi	r24, 0x0F	; 15
 484:	80 5d       	subi	r24, 0xD0	; 208
 486:	86 83       	std	Z+6, r24	; 0x06
			upper_line[7] = (ust/10)%10+0x30; //1024/1000=10.24/10=24
 488:	8d ec       	ldi	r24, 0xCD	; 205
 48a:	38 9e       	mul	r3, r24
 48c:	91 2d       	mov	r25, r1
 48e:	11 24       	eor	r1, r1
 490:	96 95       	lsr	r25
 492:	96 95       	lsr	r25
 494:	96 95       	lsr	r25
 496:	98 9f       	mul	r25, r24
 498:	81 2d       	mov	r24, r1
 49a:	11 24       	eor	r1, r1
 49c:	86 95       	lsr	r24
 49e:	86 95       	lsr	r24
 4a0:	86 95       	lsr	r24
 4a2:	88 0f       	add	r24, r24
 4a4:	28 2f       	mov	r18, r24
 4a6:	22 0f       	add	r18, r18
 4a8:	22 0f       	add	r18, r18
 4aa:	82 0f       	add	r24, r18
 4ac:	e9 2f       	mov	r30, r25
 4ae:	e8 1b       	sub	r30, r24
 4b0:	8e 2f       	mov	r24, r30
 4b2:	80 5d       	subi	r24, 0xD0	; 208
 4b4:	f8 01       	movw	r30, r16
 4b6:	87 83       	std	Z+7, r24	; 0x07
			upper_line[8] = ust%10+0x30;
 4b8:	99 0f       	add	r25, r25
 4ba:	89 2f       	mov	r24, r25
 4bc:	88 0f       	add	r24, r24
 4be:	88 0f       	add	r24, r24
 4c0:	98 0f       	add	r25, r24
 4c2:	83 2d       	mov	r24, r3
			upper_line[9] = ' ';
 4c4:	89 1b       	sub	r24, r25
		}
		
		
		lower_line[0] = ' ';
 4c6:	80 5d       	subi	r24, 0xD0	; 208
 4c8:	80 87       	std	Z+8, r24	; 0x08
		lower_line[1] = datADC/1000+0x30;
 4ca:	21 86       	std	Z+9, r2	; 0x09
 4cc:	e0 e0       	ldi	r30, 0x00	; 0
 4ce:	f1 e0       	ldi	r31, 0x01	; 1
 4d0:	20 82       	st	Z, r2
 4d2:	20 e0       	ldi	r18, 0x00	; 0
 4d4:	30 e0       	ldi	r19, 0x00	; 0
 4d6:	4a e7       	ldi	r20, 0x7A	; 122
 4d8:	54 e4       	ldi	r21, 0x44	; 68
 4da:	c7 01       	movw	r24, r14
 4dc:	b6 01       	movw	r22, r12
 4de:	9a d0       	rcall	.+308    	; 0x614 <__divsf3>
 4e0:	20 e0       	ldi	r18, 0x00	; 0
 4e2:	30 e0       	ldi	r19, 0x00	; 0
 4e4:	40 e4       	ldi	r20, 0x40	; 64
 4e6:	52 e4       	ldi	r21, 0x42	; 66
		lower_line[2] = ((int)datADC/100)%10+0x30;
 4e8:	31 d0       	rcall	.+98     	; 0x54c <__addsf3>
 4ea:	01 d1       	rcall	.+514    	; 0x6ee <__fixunssfsi>
 4ec:	60 93 01 01 	sts	0x0101, r22	; 0x800101 <__data_end+0x1>
 4f0:	c3 01       	movw	r24, r6
 4f2:	64 e6       	ldi	r22, 0x64	; 100
 4f4:	70 e0       	ldi	r23, 0x00	; 0
 4f6:	7d d3       	rcall	.+1786   	; 0xbf2 <__divmodhi4>
 4f8:	cb 01       	movw	r24, r22
 4fa:	6a e0       	ldi	r22, 0x0A	; 10
 4fc:	70 e0       	ldi	r23, 0x00	; 0
 4fe:	79 d3       	rcall	.+1778   	; 0xbf2 <__divmodhi4>
		lower_line[3] = ((int)datADC/10)%10+0x30;//%10+0x30;
 500:	80 5d       	subi	r24, 0xD0	; 208
 502:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end+0x2>
 506:	c3 01       	movw	r24, r6
 508:	6a e0       	ldi	r22, 0x0A	; 10
 50a:	70 e0       	ldi	r23, 0x00	; 0
 50c:	72 d3       	rcall	.+1764   	; 0xbf2 <__divmodhi4>
 50e:	28 2f       	mov	r18, r24
 510:	cb 01       	movw	r24, r22
 512:	6a e0       	ldi	r22, 0x0A	; 10
 514:	70 e0       	ldi	r23, 0x00	; 0
 516:	6d d3       	rcall	.+1754   	; 0xbf2 <__divmodhi4>
 518:	80 5d       	subi	r24, 0xD0	; 208
 51a:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <__data_end+0x3>
		lower_line[4] = ((int)datADC)%10+0x30;
 51e:	20 5d       	subi	r18, 0xD0	; 208
 520:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <__data_end+0x4>
		
		lcd_array(1,0,upper_line);	//Вывод массива верхней строки на дисплей
 524:	a8 01       	movw	r20, r16
 526:	65 2d       	mov	r22, r5
 528:	84 2d       	mov	r24, r4
 52a:	9e de       	rcall	.-708    	; 0x268 <_Z9lcd_arrayccPKc>
		lcd_array(0,1,lower_line);	//Вывод массива нижней строки на дисплей
 52c:	40 e0       	ldi	r20, 0x00	; 0
 52e:	51 e0       	ldi	r21, 0x01	; 1
 530:	64 2d       	mov	r22, r4
 532:	85 2d       	mov	r24, r5
 534:	99 de       	rcall	.-718    	; 0x268 <_Z9lcd_arrayccPKc>
 536:	ff e3       	ldi	r31, 0x3F	; 63
 538:	2d e0       	ldi	r18, 0x0D	; 13
 53a:	83 e0       	ldi	r24, 0x03	; 3
 53c:	f1 50       	subi	r31, 0x01	; 1
 53e:	20 40       	sbci	r18, 0x00	; 0
 540:	80 40       	sbci	r24, 0x00	; 0
 542:	e1 f7       	brne	.-8      	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 544:	00 c0       	rjmp	.+0      	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 546:	00 00       	nop
 548:	ef ce       	rjmp	.-546    	; 0x328 <main+0x58>

0000054a <__subsf3>:
 54a:	50 58       	subi	r21, 0x80	; 128

0000054c <__addsf3>:
 54c:	bb 27       	eor	r27, r27
 54e:	aa 27       	eor	r26, r26
 550:	0e d0       	rcall	.+28     	; 0x56e <__addsf3x>
 552:	4d c1       	rjmp	.+666    	; 0x7ee <__fp_round>
 554:	3e d1       	rcall	.+636    	; 0x7d2 <__fp_pscA>
 556:	30 f0       	brcs	.+12     	; 0x564 <__addsf3+0x18>
 558:	43 d1       	rcall	.+646    	; 0x7e0 <__fp_pscB>
 55a:	20 f0       	brcs	.+8      	; 0x564 <__addsf3+0x18>
 55c:	31 f4       	brne	.+12     	; 0x56a <__addsf3+0x1e>
 55e:	9f 3f       	cpi	r25, 0xFF	; 255
 560:	11 f4       	brne	.+4      	; 0x566 <__addsf3+0x1a>
 562:	1e f4       	brtc	.+6      	; 0x56a <__addsf3+0x1e>
 564:	33 c1       	rjmp	.+614    	; 0x7cc <__fp_nan>
 566:	0e f4       	brtc	.+2      	; 0x56a <__addsf3+0x1e>
 568:	e0 95       	com	r30
 56a:	e7 fb       	bst	r30, 7
 56c:	29 c1       	rjmp	.+594    	; 0x7c0 <__fp_inf>

0000056e <__addsf3x>:
 56e:	e9 2f       	mov	r30, r25
 570:	4f d1       	rcall	.+670    	; 0x810 <__fp_split3>
 572:	80 f3       	brcs	.-32     	; 0x554 <__addsf3+0x8>
 574:	ba 17       	cp	r27, r26
 576:	62 07       	cpc	r22, r18
 578:	73 07       	cpc	r23, r19
 57a:	84 07       	cpc	r24, r20
 57c:	95 07       	cpc	r25, r21
 57e:	18 f0       	brcs	.+6      	; 0x586 <__addsf3x+0x18>
 580:	71 f4       	brne	.+28     	; 0x59e <__addsf3x+0x30>
 582:	9e f5       	brtc	.+102    	; 0x5ea <__addsf3x+0x7c>
 584:	67 c1       	rjmp	.+718    	; 0x854 <__fp_zero>
 586:	0e f4       	brtc	.+2      	; 0x58a <__addsf3x+0x1c>
 588:	e0 95       	com	r30
 58a:	0b 2e       	mov	r0, r27
 58c:	ba 2f       	mov	r27, r26
 58e:	a0 2d       	mov	r26, r0
 590:	0b 01       	movw	r0, r22
 592:	b9 01       	movw	r22, r18
 594:	90 01       	movw	r18, r0
 596:	0c 01       	movw	r0, r24
 598:	ca 01       	movw	r24, r20
 59a:	a0 01       	movw	r20, r0
 59c:	11 24       	eor	r1, r1
 59e:	ff 27       	eor	r31, r31
 5a0:	59 1b       	sub	r21, r25
 5a2:	99 f0       	breq	.+38     	; 0x5ca <__addsf3x+0x5c>
 5a4:	59 3f       	cpi	r21, 0xF9	; 249
 5a6:	50 f4       	brcc	.+20     	; 0x5bc <__addsf3x+0x4e>
 5a8:	50 3e       	cpi	r21, 0xE0	; 224
 5aa:	68 f1       	brcs	.+90     	; 0x606 <__addsf3x+0x98>
 5ac:	1a 16       	cp	r1, r26
 5ae:	f0 40       	sbci	r31, 0x00	; 0
 5b0:	a2 2f       	mov	r26, r18
 5b2:	23 2f       	mov	r18, r19
 5b4:	34 2f       	mov	r19, r20
 5b6:	44 27       	eor	r20, r20
 5b8:	58 5f       	subi	r21, 0xF8	; 248
 5ba:	f3 cf       	rjmp	.-26     	; 0x5a2 <__addsf3x+0x34>
 5bc:	46 95       	lsr	r20
 5be:	37 95       	ror	r19
 5c0:	27 95       	ror	r18
 5c2:	a7 95       	ror	r26
 5c4:	f0 40       	sbci	r31, 0x00	; 0
 5c6:	53 95       	inc	r21
 5c8:	c9 f7       	brne	.-14     	; 0x5bc <__addsf3x+0x4e>
 5ca:	7e f4       	brtc	.+30     	; 0x5ea <__addsf3x+0x7c>
 5cc:	1f 16       	cp	r1, r31
 5ce:	ba 0b       	sbc	r27, r26
 5d0:	62 0b       	sbc	r22, r18
 5d2:	73 0b       	sbc	r23, r19
 5d4:	84 0b       	sbc	r24, r20
 5d6:	ba f0       	brmi	.+46     	; 0x606 <__addsf3x+0x98>
 5d8:	91 50       	subi	r25, 0x01	; 1
 5da:	a1 f0       	breq	.+40     	; 0x604 <__addsf3x+0x96>
 5dc:	ff 0f       	add	r31, r31
 5de:	bb 1f       	adc	r27, r27
 5e0:	66 1f       	adc	r22, r22
 5e2:	77 1f       	adc	r23, r23
 5e4:	88 1f       	adc	r24, r24
 5e6:	c2 f7       	brpl	.-16     	; 0x5d8 <__addsf3x+0x6a>
 5e8:	0e c0       	rjmp	.+28     	; 0x606 <__addsf3x+0x98>
 5ea:	ba 0f       	add	r27, r26
 5ec:	62 1f       	adc	r22, r18
 5ee:	73 1f       	adc	r23, r19
 5f0:	84 1f       	adc	r24, r20
 5f2:	48 f4       	brcc	.+18     	; 0x606 <__addsf3x+0x98>
 5f4:	87 95       	ror	r24
 5f6:	77 95       	ror	r23
 5f8:	67 95       	ror	r22
 5fa:	b7 95       	ror	r27
 5fc:	f7 95       	ror	r31
 5fe:	9e 3f       	cpi	r25, 0xFE	; 254
 600:	08 f0       	brcs	.+2      	; 0x604 <__addsf3x+0x96>
 602:	b3 cf       	rjmp	.-154    	; 0x56a <__addsf3+0x1e>
 604:	93 95       	inc	r25
 606:	88 0f       	add	r24, r24
 608:	08 f0       	brcs	.+2      	; 0x60c <__addsf3x+0x9e>
 60a:	99 27       	eor	r25, r25
 60c:	ee 0f       	add	r30, r30
 60e:	97 95       	ror	r25
 610:	87 95       	ror	r24
 612:	08 95       	ret

00000614 <__divsf3>:
 614:	0c d0       	rcall	.+24     	; 0x62e <__divsf3x>
 616:	eb c0       	rjmp	.+470    	; 0x7ee <__fp_round>
 618:	e3 d0       	rcall	.+454    	; 0x7e0 <__fp_pscB>
 61a:	40 f0       	brcs	.+16     	; 0x62c <__divsf3+0x18>
 61c:	da d0       	rcall	.+436    	; 0x7d2 <__fp_pscA>
 61e:	30 f0       	brcs	.+12     	; 0x62c <__divsf3+0x18>
 620:	21 f4       	brne	.+8      	; 0x62a <__divsf3+0x16>
 622:	5f 3f       	cpi	r21, 0xFF	; 255
 624:	19 f0       	breq	.+6      	; 0x62c <__divsf3+0x18>
 626:	cc c0       	rjmp	.+408    	; 0x7c0 <__fp_inf>
 628:	51 11       	cpse	r21, r1
 62a:	15 c1       	rjmp	.+554    	; 0x856 <__fp_szero>
 62c:	cf c0       	rjmp	.+414    	; 0x7cc <__fp_nan>

0000062e <__divsf3x>:
 62e:	f0 d0       	rcall	.+480    	; 0x810 <__fp_split3>
 630:	98 f3       	brcs	.-26     	; 0x618 <__divsf3+0x4>

00000632 <__divsf3_pse>:
 632:	99 23       	and	r25, r25
 634:	c9 f3       	breq	.-14     	; 0x628 <__divsf3+0x14>
 636:	55 23       	and	r21, r21
 638:	b1 f3       	breq	.-20     	; 0x626 <__divsf3+0x12>
 63a:	95 1b       	sub	r25, r21
 63c:	55 0b       	sbc	r21, r21
 63e:	bb 27       	eor	r27, r27
 640:	aa 27       	eor	r26, r26
 642:	62 17       	cp	r22, r18
 644:	73 07       	cpc	r23, r19
 646:	84 07       	cpc	r24, r20
 648:	38 f0       	brcs	.+14     	; 0x658 <__divsf3_pse+0x26>
 64a:	9f 5f       	subi	r25, 0xFF	; 255
 64c:	5f 4f       	sbci	r21, 0xFF	; 255
 64e:	22 0f       	add	r18, r18
 650:	33 1f       	adc	r19, r19
 652:	44 1f       	adc	r20, r20
 654:	aa 1f       	adc	r26, r26
 656:	a9 f3       	breq	.-22     	; 0x642 <__divsf3_pse+0x10>
 658:	33 d0       	rcall	.+102    	; 0x6c0 <__divsf3_pse+0x8e>
 65a:	0e 2e       	mov	r0, r30
 65c:	3a f0       	brmi	.+14     	; 0x66c <__divsf3_pse+0x3a>
 65e:	e0 e8       	ldi	r30, 0x80	; 128
 660:	30 d0       	rcall	.+96     	; 0x6c2 <__divsf3_pse+0x90>
 662:	91 50       	subi	r25, 0x01	; 1
 664:	50 40       	sbci	r21, 0x00	; 0
 666:	e6 95       	lsr	r30
 668:	00 1c       	adc	r0, r0
 66a:	ca f7       	brpl	.-14     	; 0x65e <__divsf3_pse+0x2c>
 66c:	29 d0       	rcall	.+82     	; 0x6c0 <__divsf3_pse+0x8e>
 66e:	fe 2f       	mov	r31, r30
 670:	27 d0       	rcall	.+78     	; 0x6c0 <__divsf3_pse+0x8e>
 672:	66 0f       	add	r22, r22
 674:	77 1f       	adc	r23, r23
 676:	88 1f       	adc	r24, r24
 678:	bb 1f       	adc	r27, r27
 67a:	26 17       	cp	r18, r22
 67c:	37 07       	cpc	r19, r23
 67e:	48 07       	cpc	r20, r24
 680:	ab 07       	cpc	r26, r27
 682:	b0 e8       	ldi	r27, 0x80	; 128
 684:	09 f0       	breq	.+2      	; 0x688 <__divsf3_pse+0x56>
 686:	bb 0b       	sbc	r27, r27
 688:	80 2d       	mov	r24, r0
 68a:	bf 01       	movw	r22, r30
 68c:	ff 27       	eor	r31, r31
 68e:	93 58       	subi	r25, 0x83	; 131
 690:	5f 4f       	sbci	r21, 0xFF	; 255
 692:	2a f0       	brmi	.+10     	; 0x69e <__divsf3_pse+0x6c>
 694:	9e 3f       	cpi	r25, 0xFE	; 254
 696:	51 05       	cpc	r21, r1
 698:	68 f0       	brcs	.+26     	; 0x6b4 <__divsf3_pse+0x82>
 69a:	92 c0       	rjmp	.+292    	; 0x7c0 <__fp_inf>
 69c:	dc c0       	rjmp	.+440    	; 0x856 <__fp_szero>
 69e:	5f 3f       	cpi	r21, 0xFF	; 255
 6a0:	ec f3       	brlt	.-6      	; 0x69c <__divsf3_pse+0x6a>
 6a2:	98 3e       	cpi	r25, 0xE8	; 232
 6a4:	dc f3       	brlt	.-10     	; 0x69c <__divsf3_pse+0x6a>
 6a6:	86 95       	lsr	r24
 6a8:	77 95       	ror	r23
 6aa:	67 95       	ror	r22
 6ac:	b7 95       	ror	r27
 6ae:	f7 95       	ror	r31
 6b0:	9f 5f       	subi	r25, 0xFF	; 255
 6b2:	c9 f7       	brne	.-14     	; 0x6a6 <__divsf3_pse+0x74>
 6b4:	88 0f       	add	r24, r24
 6b6:	91 1d       	adc	r25, r1
 6b8:	96 95       	lsr	r25
 6ba:	87 95       	ror	r24
 6bc:	97 f9       	bld	r25, 7
 6be:	08 95       	ret
 6c0:	e1 e0       	ldi	r30, 0x01	; 1
 6c2:	66 0f       	add	r22, r22
 6c4:	77 1f       	adc	r23, r23
 6c6:	88 1f       	adc	r24, r24
 6c8:	bb 1f       	adc	r27, r27
 6ca:	62 17       	cp	r22, r18
 6cc:	73 07       	cpc	r23, r19
 6ce:	84 07       	cpc	r24, r20
 6d0:	ba 07       	cpc	r27, r26
 6d2:	20 f0       	brcs	.+8      	; 0x6dc <__divsf3_pse+0xaa>
 6d4:	62 1b       	sub	r22, r18
 6d6:	73 0b       	sbc	r23, r19
 6d8:	84 0b       	sbc	r24, r20
 6da:	ba 0b       	sbc	r27, r26
 6dc:	ee 1f       	adc	r30, r30
 6de:	88 f7       	brcc	.-30     	; 0x6c2 <__divsf3_pse+0x90>
 6e0:	e0 95       	com	r30
 6e2:	08 95       	ret

000006e4 <__fixsfsi>:
 6e4:	04 d0       	rcall	.+8      	; 0x6ee <__fixunssfsi>
 6e6:	68 94       	set
 6e8:	b1 11       	cpse	r27, r1
 6ea:	b5 c0       	rjmp	.+362    	; 0x856 <__fp_szero>
 6ec:	08 95       	ret

000006ee <__fixunssfsi>:
 6ee:	98 d0       	rcall	.+304    	; 0x820 <__fp_splitA>
 6f0:	88 f0       	brcs	.+34     	; 0x714 <__fixunssfsi+0x26>
 6f2:	9f 57       	subi	r25, 0x7F	; 127
 6f4:	90 f0       	brcs	.+36     	; 0x71a <__fixunssfsi+0x2c>
 6f6:	b9 2f       	mov	r27, r25
 6f8:	99 27       	eor	r25, r25
 6fa:	b7 51       	subi	r27, 0x17	; 23
 6fc:	a0 f0       	brcs	.+40     	; 0x726 <__fixunssfsi+0x38>
 6fe:	d1 f0       	breq	.+52     	; 0x734 <__fixunssfsi+0x46>
 700:	66 0f       	add	r22, r22
 702:	77 1f       	adc	r23, r23
 704:	88 1f       	adc	r24, r24
 706:	99 1f       	adc	r25, r25
 708:	1a f0       	brmi	.+6      	; 0x710 <__fixunssfsi+0x22>
 70a:	ba 95       	dec	r27
 70c:	c9 f7       	brne	.-14     	; 0x700 <__fixunssfsi+0x12>
 70e:	12 c0       	rjmp	.+36     	; 0x734 <__fixunssfsi+0x46>
 710:	b1 30       	cpi	r27, 0x01	; 1
 712:	81 f0       	breq	.+32     	; 0x734 <__fixunssfsi+0x46>
 714:	9f d0       	rcall	.+318    	; 0x854 <__fp_zero>
 716:	b1 e0       	ldi	r27, 0x01	; 1
 718:	08 95       	ret
 71a:	9c c0       	rjmp	.+312    	; 0x854 <__fp_zero>
 71c:	67 2f       	mov	r22, r23
 71e:	78 2f       	mov	r23, r24
 720:	88 27       	eor	r24, r24
 722:	b8 5f       	subi	r27, 0xF8	; 248
 724:	39 f0       	breq	.+14     	; 0x734 <__fixunssfsi+0x46>
 726:	b9 3f       	cpi	r27, 0xF9	; 249
 728:	cc f3       	brlt	.-14     	; 0x71c <__fixunssfsi+0x2e>
 72a:	86 95       	lsr	r24
 72c:	77 95       	ror	r23
 72e:	67 95       	ror	r22
 730:	b3 95       	inc	r27
 732:	d9 f7       	brne	.-10     	; 0x72a <__fixunssfsi+0x3c>
 734:	3e f4       	brtc	.+14     	; 0x744 <__fixunssfsi+0x56>
 736:	90 95       	com	r25
 738:	80 95       	com	r24
 73a:	70 95       	com	r23
 73c:	61 95       	neg	r22
 73e:	7f 4f       	sbci	r23, 0xFF	; 255
 740:	8f 4f       	sbci	r24, 0xFF	; 255
 742:	9f 4f       	sbci	r25, 0xFF	; 255
 744:	08 95       	ret

00000746 <__floatunsisf>:
 746:	e8 94       	clt
 748:	09 c0       	rjmp	.+18     	; 0x75c <__floatsisf+0x12>

0000074a <__floatsisf>:
 74a:	97 fb       	bst	r25, 7
 74c:	3e f4       	brtc	.+14     	; 0x75c <__floatsisf+0x12>
 74e:	90 95       	com	r25
 750:	80 95       	com	r24
 752:	70 95       	com	r23
 754:	61 95       	neg	r22
 756:	7f 4f       	sbci	r23, 0xFF	; 255
 758:	8f 4f       	sbci	r24, 0xFF	; 255
 75a:	9f 4f       	sbci	r25, 0xFF	; 255
 75c:	99 23       	and	r25, r25
 75e:	a9 f0       	breq	.+42     	; 0x78a <__floatsisf+0x40>
 760:	f9 2f       	mov	r31, r25
 762:	96 e9       	ldi	r25, 0x96	; 150
 764:	bb 27       	eor	r27, r27
 766:	93 95       	inc	r25
 768:	f6 95       	lsr	r31
 76a:	87 95       	ror	r24
 76c:	77 95       	ror	r23
 76e:	67 95       	ror	r22
 770:	b7 95       	ror	r27
 772:	f1 11       	cpse	r31, r1
 774:	f8 cf       	rjmp	.-16     	; 0x766 <__floatsisf+0x1c>
 776:	fa f4       	brpl	.+62     	; 0x7b6 <__floatsisf+0x6c>
 778:	bb 0f       	add	r27, r27
 77a:	11 f4       	brne	.+4      	; 0x780 <__floatsisf+0x36>
 77c:	60 ff       	sbrs	r22, 0
 77e:	1b c0       	rjmp	.+54     	; 0x7b6 <__floatsisf+0x6c>
 780:	6f 5f       	subi	r22, 0xFF	; 255
 782:	7f 4f       	sbci	r23, 0xFF	; 255
 784:	8f 4f       	sbci	r24, 0xFF	; 255
 786:	9f 4f       	sbci	r25, 0xFF	; 255
 788:	16 c0       	rjmp	.+44     	; 0x7b6 <__floatsisf+0x6c>
 78a:	88 23       	and	r24, r24
 78c:	11 f0       	breq	.+4      	; 0x792 <__floatsisf+0x48>
 78e:	96 e9       	ldi	r25, 0x96	; 150
 790:	11 c0       	rjmp	.+34     	; 0x7b4 <__floatsisf+0x6a>
 792:	77 23       	and	r23, r23
 794:	21 f0       	breq	.+8      	; 0x79e <__floatsisf+0x54>
 796:	9e e8       	ldi	r25, 0x8E	; 142
 798:	87 2f       	mov	r24, r23
 79a:	76 2f       	mov	r23, r22
 79c:	05 c0       	rjmp	.+10     	; 0x7a8 <__floatsisf+0x5e>
 79e:	66 23       	and	r22, r22
 7a0:	71 f0       	breq	.+28     	; 0x7be <__floatsisf+0x74>
 7a2:	96 e8       	ldi	r25, 0x86	; 134
 7a4:	86 2f       	mov	r24, r22
 7a6:	70 e0       	ldi	r23, 0x00	; 0
 7a8:	60 e0       	ldi	r22, 0x00	; 0
 7aa:	2a f0       	brmi	.+10     	; 0x7b6 <__floatsisf+0x6c>
 7ac:	9a 95       	dec	r25
 7ae:	66 0f       	add	r22, r22
 7b0:	77 1f       	adc	r23, r23
 7b2:	88 1f       	adc	r24, r24
 7b4:	da f7       	brpl	.-10     	; 0x7ac <__floatsisf+0x62>
 7b6:	88 0f       	add	r24, r24
 7b8:	96 95       	lsr	r25
 7ba:	87 95       	ror	r24
 7bc:	97 f9       	bld	r25, 7
 7be:	08 95       	ret

000007c0 <__fp_inf>:
 7c0:	97 f9       	bld	r25, 7
 7c2:	9f 67       	ori	r25, 0x7F	; 127
 7c4:	80 e8       	ldi	r24, 0x80	; 128
 7c6:	70 e0       	ldi	r23, 0x00	; 0
 7c8:	60 e0       	ldi	r22, 0x00	; 0
 7ca:	08 95       	ret

000007cc <__fp_nan>:
 7cc:	9f ef       	ldi	r25, 0xFF	; 255
 7ce:	80 ec       	ldi	r24, 0xC0	; 192
 7d0:	08 95       	ret

000007d2 <__fp_pscA>:
 7d2:	00 24       	eor	r0, r0
 7d4:	0a 94       	dec	r0
 7d6:	16 16       	cp	r1, r22
 7d8:	17 06       	cpc	r1, r23
 7da:	18 06       	cpc	r1, r24
 7dc:	09 06       	cpc	r0, r25
 7de:	08 95       	ret

000007e0 <__fp_pscB>:
 7e0:	00 24       	eor	r0, r0
 7e2:	0a 94       	dec	r0
 7e4:	12 16       	cp	r1, r18
 7e6:	13 06       	cpc	r1, r19
 7e8:	14 06       	cpc	r1, r20
 7ea:	05 06       	cpc	r0, r21
 7ec:	08 95       	ret

000007ee <__fp_round>:
 7ee:	09 2e       	mov	r0, r25
 7f0:	03 94       	inc	r0
 7f2:	00 0c       	add	r0, r0
 7f4:	11 f4       	brne	.+4      	; 0x7fa <__fp_round+0xc>
 7f6:	88 23       	and	r24, r24
 7f8:	52 f0       	brmi	.+20     	; 0x80e <__fp_round+0x20>
 7fa:	bb 0f       	add	r27, r27
 7fc:	40 f4       	brcc	.+16     	; 0x80e <__fp_round+0x20>
 7fe:	bf 2b       	or	r27, r31
 800:	11 f4       	brne	.+4      	; 0x806 <__fp_round+0x18>
 802:	60 ff       	sbrs	r22, 0
 804:	04 c0       	rjmp	.+8      	; 0x80e <__fp_round+0x20>
 806:	6f 5f       	subi	r22, 0xFF	; 255
 808:	7f 4f       	sbci	r23, 0xFF	; 255
 80a:	8f 4f       	sbci	r24, 0xFF	; 255
 80c:	9f 4f       	sbci	r25, 0xFF	; 255
 80e:	08 95       	ret

00000810 <__fp_split3>:
 810:	57 fd       	sbrc	r21, 7
 812:	90 58       	subi	r25, 0x80	; 128
 814:	44 0f       	add	r20, r20
 816:	55 1f       	adc	r21, r21
 818:	59 f0       	breq	.+22     	; 0x830 <__fp_splitA+0x10>
 81a:	5f 3f       	cpi	r21, 0xFF	; 255
 81c:	71 f0       	breq	.+28     	; 0x83a <__fp_splitA+0x1a>
 81e:	47 95       	ror	r20

00000820 <__fp_splitA>:
 820:	88 0f       	add	r24, r24
 822:	97 fb       	bst	r25, 7
 824:	99 1f       	adc	r25, r25
 826:	61 f0       	breq	.+24     	; 0x840 <__fp_splitA+0x20>
 828:	9f 3f       	cpi	r25, 0xFF	; 255
 82a:	79 f0       	breq	.+30     	; 0x84a <__fp_splitA+0x2a>
 82c:	87 95       	ror	r24
 82e:	08 95       	ret
 830:	12 16       	cp	r1, r18
 832:	13 06       	cpc	r1, r19
 834:	14 06       	cpc	r1, r20
 836:	55 1f       	adc	r21, r21
 838:	f2 cf       	rjmp	.-28     	; 0x81e <__fp_split3+0xe>
 83a:	46 95       	lsr	r20
 83c:	f1 df       	rcall	.-30     	; 0x820 <__fp_splitA>
 83e:	08 c0       	rjmp	.+16     	; 0x850 <__fp_splitA+0x30>
 840:	16 16       	cp	r1, r22
 842:	17 06       	cpc	r1, r23
 844:	18 06       	cpc	r1, r24
 846:	99 1f       	adc	r25, r25
 848:	f1 cf       	rjmp	.-30     	; 0x82c <__fp_splitA+0xc>
 84a:	86 95       	lsr	r24
 84c:	71 05       	cpc	r23, r1
 84e:	61 05       	cpc	r22, r1
 850:	08 94       	sec
 852:	08 95       	ret

00000854 <__fp_zero>:
 854:	e8 94       	clt

00000856 <__fp_szero>:
 856:	bb 27       	eor	r27, r27
 858:	66 27       	eor	r22, r22
 85a:	77 27       	eor	r23, r23
 85c:	cb 01       	movw	r24, r22
 85e:	97 f9       	bld	r25, 7
 860:	08 95       	ret

00000862 <__mulsf3>:
 862:	0b d0       	rcall	.+22     	; 0x87a <__mulsf3x>
 864:	c4 cf       	rjmp	.-120    	; 0x7ee <__fp_round>
 866:	b5 df       	rcall	.-150    	; 0x7d2 <__fp_pscA>
 868:	28 f0       	brcs	.+10     	; 0x874 <__mulsf3+0x12>
 86a:	ba df       	rcall	.-140    	; 0x7e0 <__fp_pscB>
 86c:	18 f0       	brcs	.+6      	; 0x874 <__mulsf3+0x12>
 86e:	95 23       	and	r25, r21
 870:	09 f0       	breq	.+2      	; 0x874 <__mulsf3+0x12>
 872:	a6 cf       	rjmp	.-180    	; 0x7c0 <__fp_inf>
 874:	ab cf       	rjmp	.-170    	; 0x7cc <__fp_nan>
 876:	11 24       	eor	r1, r1
 878:	ee cf       	rjmp	.-36     	; 0x856 <__fp_szero>

0000087a <__mulsf3x>:
 87a:	ca df       	rcall	.-108    	; 0x810 <__fp_split3>
 87c:	a0 f3       	brcs	.-24     	; 0x866 <__mulsf3+0x4>

0000087e <__mulsf3_pse>:
 87e:	95 9f       	mul	r25, r21
 880:	d1 f3       	breq	.-12     	; 0x876 <__mulsf3+0x14>
 882:	95 0f       	add	r25, r21
 884:	50 e0       	ldi	r21, 0x00	; 0
 886:	55 1f       	adc	r21, r21
 888:	62 9f       	mul	r22, r18
 88a:	f0 01       	movw	r30, r0
 88c:	72 9f       	mul	r23, r18
 88e:	bb 27       	eor	r27, r27
 890:	f0 0d       	add	r31, r0
 892:	b1 1d       	adc	r27, r1
 894:	63 9f       	mul	r22, r19
 896:	aa 27       	eor	r26, r26
 898:	f0 0d       	add	r31, r0
 89a:	b1 1d       	adc	r27, r1
 89c:	aa 1f       	adc	r26, r26
 89e:	64 9f       	mul	r22, r20
 8a0:	66 27       	eor	r22, r22
 8a2:	b0 0d       	add	r27, r0
 8a4:	a1 1d       	adc	r26, r1
 8a6:	66 1f       	adc	r22, r22
 8a8:	82 9f       	mul	r24, r18
 8aa:	22 27       	eor	r18, r18
 8ac:	b0 0d       	add	r27, r0
 8ae:	a1 1d       	adc	r26, r1
 8b0:	62 1f       	adc	r22, r18
 8b2:	73 9f       	mul	r23, r19
 8b4:	b0 0d       	add	r27, r0
 8b6:	a1 1d       	adc	r26, r1
 8b8:	62 1f       	adc	r22, r18
 8ba:	83 9f       	mul	r24, r19
 8bc:	a0 0d       	add	r26, r0
 8be:	61 1d       	adc	r22, r1
 8c0:	22 1f       	adc	r18, r18
 8c2:	74 9f       	mul	r23, r20
 8c4:	33 27       	eor	r19, r19
 8c6:	a0 0d       	add	r26, r0
 8c8:	61 1d       	adc	r22, r1
 8ca:	23 1f       	adc	r18, r19
 8cc:	84 9f       	mul	r24, r20
 8ce:	60 0d       	add	r22, r0
 8d0:	21 1d       	adc	r18, r1
 8d2:	82 2f       	mov	r24, r18
 8d4:	76 2f       	mov	r23, r22
 8d6:	6a 2f       	mov	r22, r26
 8d8:	11 24       	eor	r1, r1
 8da:	9f 57       	subi	r25, 0x7F	; 127
 8dc:	50 40       	sbci	r21, 0x00	; 0
 8de:	8a f0       	brmi	.+34     	; 0x902 <__mulsf3_pse+0x84>
 8e0:	e1 f0       	breq	.+56     	; 0x91a <__mulsf3_pse+0x9c>
 8e2:	88 23       	and	r24, r24
 8e4:	4a f0       	brmi	.+18     	; 0x8f8 <__mulsf3_pse+0x7a>
 8e6:	ee 0f       	add	r30, r30
 8e8:	ff 1f       	adc	r31, r31
 8ea:	bb 1f       	adc	r27, r27
 8ec:	66 1f       	adc	r22, r22
 8ee:	77 1f       	adc	r23, r23
 8f0:	88 1f       	adc	r24, r24
 8f2:	91 50       	subi	r25, 0x01	; 1
 8f4:	50 40       	sbci	r21, 0x00	; 0
 8f6:	a9 f7       	brne	.-22     	; 0x8e2 <__mulsf3_pse+0x64>
 8f8:	9e 3f       	cpi	r25, 0xFE	; 254
 8fa:	51 05       	cpc	r21, r1
 8fc:	70 f0       	brcs	.+28     	; 0x91a <__mulsf3_pse+0x9c>
 8fe:	60 cf       	rjmp	.-320    	; 0x7c0 <__fp_inf>
 900:	aa cf       	rjmp	.-172    	; 0x856 <__fp_szero>
 902:	5f 3f       	cpi	r21, 0xFF	; 255
 904:	ec f3       	brlt	.-6      	; 0x900 <__mulsf3_pse+0x82>
 906:	98 3e       	cpi	r25, 0xE8	; 232
 908:	dc f3       	brlt	.-10     	; 0x900 <__mulsf3_pse+0x82>
 90a:	86 95       	lsr	r24
 90c:	77 95       	ror	r23
 90e:	67 95       	ror	r22
 910:	b7 95       	ror	r27
 912:	f7 95       	ror	r31
 914:	e7 95       	ror	r30
 916:	9f 5f       	subi	r25, 0xFF	; 255
 918:	c1 f7       	brne	.-16     	; 0x90a <__mulsf3_pse+0x8c>
 91a:	fe 2b       	or	r31, r30
 91c:	88 0f       	add	r24, r24
 91e:	91 1d       	adc	r25, r1
 920:	96 95       	lsr	r25
 922:	87 95       	ror	r24
 924:	97 f9       	bld	r25, 7
 926:	08 95       	ret

00000928 <pow>:
 928:	fa 01       	movw	r30, r20
 92a:	ee 0f       	add	r30, r30
 92c:	ff 1f       	adc	r31, r31
 92e:	30 96       	adiw	r30, 0x00	; 0
 930:	21 05       	cpc	r18, r1
 932:	31 05       	cpc	r19, r1
 934:	99 f1       	breq	.+102    	; 0x99c <pow+0x74>
 936:	61 15       	cp	r22, r1
 938:	71 05       	cpc	r23, r1
 93a:	61 f4       	brne	.+24     	; 0x954 <pow+0x2c>
 93c:	80 38       	cpi	r24, 0x80	; 128
 93e:	bf e3       	ldi	r27, 0x3F	; 63
 940:	9b 07       	cpc	r25, r27
 942:	49 f1       	breq	.+82     	; 0x996 <pow+0x6e>
 944:	68 94       	set
 946:	90 38       	cpi	r25, 0x80	; 128
 948:	81 05       	cpc	r24, r1
 94a:	61 f0       	breq	.+24     	; 0x964 <pow+0x3c>
 94c:	80 38       	cpi	r24, 0x80	; 128
 94e:	bf ef       	ldi	r27, 0xFF	; 255
 950:	9b 07       	cpc	r25, r27
 952:	41 f0       	breq	.+16     	; 0x964 <pow+0x3c>
 954:	99 23       	and	r25, r25
 956:	42 f5       	brpl	.+80     	; 0x9a8 <pow+0x80>
 958:	ff 3f       	cpi	r31, 0xFF	; 255
 95a:	e1 05       	cpc	r30, r1
 95c:	31 05       	cpc	r19, r1
 95e:	21 05       	cpc	r18, r1
 960:	11 f1       	breq	.+68     	; 0x9a6 <pow+0x7e>
 962:	e8 94       	clt
 964:	08 94       	sec
 966:	e7 95       	ror	r30
 968:	d9 01       	movw	r26, r18
 96a:	aa 23       	and	r26, r26
 96c:	29 f4       	brne	.+10     	; 0x978 <pow+0x50>
 96e:	ab 2f       	mov	r26, r27
 970:	be 2f       	mov	r27, r30
 972:	f8 5f       	subi	r31, 0xF8	; 248
 974:	d0 f3       	brcs	.-12     	; 0x96a <pow+0x42>
 976:	10 c0       	rjmp	.+32     	; 0x998 <pow+0x70>
 978:	ff 5f       	subi	r31, 0xFF	; 255
 97a:	70 f4       	brcc	.+28     	; 0x998 <pow+0x70>
 97c:	a6 95       	lsr	r26
 97e:	e0 f7       	brcc	.-8      	; 0x978 <pow+0x50>
 980:	f7 39       	cpi	r31, 0x97	; 151
 982:	50 f0       	brcs	.+20     	; 0x998 <pow+0x70>
 984:	19 f0       	breq	.+6      	; 0x98c <pow+0x64>
 986:	ff 3a       	cpi	r31, 0xAF	; 175
 988:	38 f4       	brcc	.+14     	; 0x998 <pow+0x70>
 98a:	9f 77       	andi	r25, 0x7F	; 127
 98c:	9f 93       	push	r25
 98e:	0c d0       	rcall	.+24     	; 0x9a8 <pow+0x80>
 990:	0f 90       	pop	r0
 992:	07 fc       	sbrc	r0, 7
 994:	90 58       	subi	r25, 0x80	; 128
 996:	08 95       	ret
 998:	3e f0       	brts	.+14     	; 0x9a8 <pow+0x80>
 99a:	18 cf       	rjmp	.-464    	; 0x7cc <__fp_nan>
 99c:	60 e0       	ldi	r22, 0x00	; 0
 99e:	70 e0       	ldi	r23, 0x00	; 0
 9a0:	80 e8       	ldi	r24, 0x80	; 128
 9a2:	9f e3       	ldi	r25, 0x3F	; 63
 9a4:	08 95       	ret
 9a6:	4f e7       	ldi	r20, 0x7F	; 127
 9a8:	9f 77       	andi	r25, 0x7F	; 127
 9aa:	5f 93       	push	r21
 9ac:	4f 93       	push	r20
 9ae:	3f 93       	push	r19
 9b0:	2f 93       	push	r18
 9b2:	9e d0       	rcall	.+316    	; 0xaf0 <log>
 9b4:	2f 91       	pop	r18
 9b6:	3f 91       	pop	r19
 9b8:	4f 91       	pop	r20
 9ba:	5f 91       	pop	r21
 9bc:	52 df       	rcall	.-348    	; 0x862 <__mulsf3>
 9be:	05 c0       	rjmp	.+10     	; 0x9ca <exp>
 9c0:	19 f4       	brne	.+6      	; 0x9c8 <pow+0xa0>
 9c2:	0e f0       	brts	.+2      	; 0x9c6 <pow+0x9e>
 9c4:	fd ce       	rjmp	.-518    	; 0x7c0 <__fp_inf>
 9c6:	46 cf       	rjmp	.-372    	; 0x854 <__fp_zero>
 9c8:	01 cf       	rjmp	.-510    	; 0x7cc <__fp_nan>

000009ca <exp>:
 9ca:	2a df       	rcall	.-428    	; 0x820 <__fp_splitA>
 9cc:	c8 f3       	brcs	.-14     	; 0x9c0 <pow+0x98>
 9ce:	96 38       	cpi	r25, 0x86	; 134
 9d0:	c0 f7       	brcc	.-16     	; 0x9c2 <pow+0x9a>
 9d2:	07 f8       	bld	r0, 7
 9d4:	0f 92       	push	r0
 9d6:	e8 94       	clt
 9d8:	2b e3       	ldi	r18, 0x3B	; 59
 9da:	3a ea       	ldi	r19, 0xAA	; 170
 9dc:	48 eb       	ldi	r20, 0xB8	; 184
 9de:	5f e7       	ldi	r21, 0x7F	; 127
 9e0:	4e df       	rcall	.-356    	; 0x87e <__mulsf3_pse>
 9e2:	0f 92       	push	r0
 9e4:	0f 92       	push	r0
 9e6:	0f 92       	push	r0
 9e8:	4d b7       	in	r20, 0x3d	; 61
 9ea:	5e b7       	in	r21, 0x3e	; 62
 9ec:	0f 92       	push	r0
 9ee:	c0 d0       	rcall	.+384    	; 0xb70 <modf>
 9f0:	ec e8       	ldi	r30, 0x8C	; 140
 9f2:	f0 e0       	ldi	r31, 0x00	; 0
 9f4:	16 d0       	rcall	.+44     	; 0xa22 <__fp_powser>
 9f6:	4f 91       	pop	r20
 9f8:	5f 91       	pop	r21
 9fa:	ef 91       	pop	r30
 9fc:	ff 91       	pop	r31
 9fe:	e5 95       	asr	r30
 a00:	ee 1f       	adc	r30, r30
 a02:	ff 1f       	adc	r31, r31
 a04:	49 f0       	breq	.+18     	; 0xa18 <exp+0x4e>
 a06:	fe 57       	subi	r31, 0x7E	; 126
 a08:	e0 68       	ori	r30, 0x80	; 128
 a0a:	44 27       	eor	r20, r20
 a0c:	ee 0f       	add	r30, r30
 a0e:	44 1f       	adc	r20, r20
 a10:	fa 95       	dec	r31
 a12:	e1 f7       	brne	.-8      	; 0xa0c <exp+0x42>
 a14:	41 95       	neg	r20
 a16:	55 0b       	sbc	r21, r21
 a18:	32 d0       	rcall	.+100    	; 0xa7e <ldexp>
 a1a:	0f 90       	pop	r0
 a1c:	07 fe       	sbrs	r0, 7
 a1e:	26 c0       	rjmp	.+76     	; 0xa6c <inverse>
 a20:	08 95       	ret

00000a22 <__fp_powser>:
 a22:	df 93       	push	r29
 a24:	cf 93       	push	r28
 a26:	1f 93       	push	r17
 a28:	0f 93       	push	r16
 a2a:	ff 92       	push	r15
 a2c:	ef 92       	push	r14
 a2e:	df 92       	push	r13
 a30:	7b 01       	movw	r14, r22
 a32:	8c 01       	movw	r16, r24
 a34:	68 94       	set
 a36:	05 c0       	rjmp	.+10     	; 0xa42 <__fp_powser+0x20>
 a38:	da 2e       	mov	r13, r26
 a3a:	ef 01       	movw	r28, r30
 a3c:	1e df       	rcall	.-452    	; 0x87a <__mulsf3x>
 a3e:	fe 01       	movw	r30, r28
 a40:	e8 94       	clt
 a42:	a5 91       	lpm	r26, Z+
 a44:	25 91       	lpm	r18, Z+
 a46:	35 91       	lpm	r19, Z+
 a48:	45 91       	lpm	r20, Z+
 a4a:	55 91       	lpm	r21, Z+
 a4c:	ae f3       	brts	.-22     	; 0xa38 <__fp_powser+0x16>
 a4e:	ef 01       	movw	r28, r30
 a50:	8e dd       	rcall	.-1252   	; 0x56e <__addsf3x>
 a52:	fe 01       	movw	r30, r28
 a54:	97 01       	movw	r18, r14
 a56:	a8 01       	movw	r20, r16
 a58:	da 94       	dec	r13
 a5a:	79 f7       	brne	.-34     	; 0xa3a <__fp_powser+0x18>
 a5c:	df 90       	pop	r13
 a5e:	ef 90       	pop	r14
 a60:	ff 90       	pop	r15
 a62:	0f 91       	pop	r16
 a64:	1f 91       	pop	r17
 a66:	cf 91       	pop	r28
 a68:	df 91       	pop	r29
 a6a:	08 95       	ret

00000a6c <inverse>:
 a6c:	9b 01       	movw	r18, r22
 a6e:	ac 01       	movw	r20, r24
 a70:	60 e0       	ldi	r22, 0x00	; 0
 a72:	70 e0       	ldi	r23, 0x00	; 0
 a74:	80 e8       	ldi	r24, 0x80	; 128
 a76:	9f e3       	ldi	r25, 0x3F	; 63
 a78:	cd cd       	rjmp	.-1126   	; 0x614 <__divsf3>
 a7a:	a2 ce       	rjmp	.-700    	; 0x7c0 <__fp_inf>
 a7c:	ac c0       	rjmp	.+344    	; 0xbd6 <__fp_mpack>

00000a7e <ldexp>:
 a7e:	d0 de       	rcall	.-608    	; 0x820 <__fp_splitA>
 a80:	e8 f3       	brcs	.-6      	; 0xa7c <inverse+0x10>
 a82:	99 23       	and	r25, r25
 a84:	d9 f3       	breq	.-10     	; 0xa7c <inverse+0x10>
 a86:	94 0f       	add	r25, r20
 a88:	51 1d       	adc	r21, r1
 a8a:	bb f3       	brvs	.-18     	; 0xa7a <inverse+0xe>
 a8c:	91 50       	subi	r25, 0x01	; 1
 a8e:	50 40       	sbci	r21, 0x00	; 0
 a90:	94 f0       	brlt	.+36     	; 0xab6 <ldexp+0x38>
 a92:	59 f0       	breq	.+22     	; 0xaaa <ldexp+0x2c>
 a94:	88 23       	and	r24, r24
 a96:	32 f0       	brmi	.+12     	; 0xaa4 <ldexp+0x26>
 a98:	66 0f       	add	r22, r22
 a9a:	77 1f       	adc	r23, r23
 a9c:	88 1f       	adc	r24, r24
 a9e:	91 50       	subi	r25, 0x01	; 1
 aa0:	50 40       	sbci	r21, 0x00	; 0
 aa2:	c1 f7       	brne	.-16     	; 0xa94 <ldexp+0x16>
 aa4:	9e 3f       	cpi	r25, 0xFE	; 254
 aa6:	51 05       	cpc	r21, r1
 aa8:	44 f7       	brge	.-48     	; 0xa7a <inverse+0xe>
 aaa:	88 0f       	add	r24, r24
 aac:	91 1d       	adc	r25, r1
 aae:	96 95       	lsr	r25
 ab0:	87 95       	ror	r24
 ab2:	97 f9       	bld	r25, 7
 ab4:	08 95       	ret
 ab6:	5f 3f       	cpi	r21, 0xFF	; 255
 ab8:	ac f0       	brlt	.+42     	; 0xae4 <ldexp+0x66>
 aba:	98 3e       	cpi	r25, 0xE8	; 232
 abc:	9c f0       	brlt	.+38     	; 0xae4 <ldexp+0x66>
 abe:	bb 27       	eor	r27, r27
 ac0:	86 95       	lsr	r24
 ac2:	77 95       	ror	r23
 ac4:	67 95       	ror	r22
 ac6:	b7 95       	ror	r27
 ac8:	08 f4       	brcc	.+2      	; 0xacc <ldexp+0x4e>
 aca:	b1 60       	ori	r27, 0x01	; 1
 acc:	93 95       	inc	r25
 ace:	c1 f7       	brne	.-16     	; 0xac0 <ldexp+0x42>
 ad0:	bb 0f       	add	r27, r27
 ad2:	58 f7       	brcc	.-42     	; 0xaaa <ldexp+0x2c>
 ad4:	11 f4       	brne	.+4      	; 0xada <ldexp+0x5c>
 ad6:	60 ff       	sbrs	r22, 0
 ad8:	e8 cf       	rjmp	.-48     	; 0xaaa <ldexp+0x2c>
 ada:	6f 5f       	subi	r22, 0xFF	; 255
 adc:	7f 4f       	sbci	r23, 0xFF	; 255
 ade:	8f 4f       	sbci	r24, 0xFF	; 255
 ae0:	9f 4f       	sbci	r25, 0xFF	; 255
 ae2:	e3 cf       	rjmp	.-58     	; 0xaaa <ldexp+0x2c>
 ae4:	b8 ce       	rjmp	.-656    	; 0x856 <__fp_szero>
 ae6:	0e f0       	brts	.+2      	; 0xaea <ldexp+0x6c>
 ae8:	76 c0       	rjmp	.+236    	; 0xbd6 <__fp_mpack>
 aea:	70 ce       	rjmp	.-800    	; 0x7cc <__fp_nan>
 aec:	68 94       	set
 aee:	68 ce       	rjmp	.-816    	; 0x7c0 <__fp_inf>

00000af0 <log>:
 af0:	97 de       	rcall	.-722    	; 0x820 <__fp_splitA>
 af2:	c8 f3       	brcs	.-14     	; 0xae6 <ldexp+0x68>
 af4:	99 23       	and	r25, r25
 af6:	d1 f3       	breq	.-12     	; 0xaec <ldexp+0x6e>
 af8:	c6 f3       	brts	.-16     	; 0xaea <ldexp+0x6c>
 afa:	df 93       	push	r29
 afc:	cf 93       	push	r28
 afe:	1f 93       	push	r17
 b00:	0f 93       	push	r16
 b02:	ff 92       	push	r15
 b04:	c9 2f       	mov	r28, r25
 b06:	dd 27       	eor	r29, r29
 b08:	88 23       	and	r24, r24
 b0a:	2a f0       	brmi	.+10     	; 0xb16 <log+0x26>
 b0c:	21 97       	sbiw	r28, 0x01	; 1
 b0e:	66 0f       	add	r22, r22
 b10:	77 1f       	adc	r23, r23
 b12:	88 1f       	adc	r24, r24
 b14:	da f7       	brpl	.-10     	; 0xb0c <log+0x1c>
 b16:	20 e0       	ldi	r18, 0x00	; 0
 b18:	30 e0       	ldi	r19, 0x00	; 0
 b1a:	40 e8       	ldi	r20, 0x80	; 128
 b1c:	5f eb       	ldi	r21, 0xBF	; 191
 b1e:	9f e3       	ldi	r25, 0x3F	; 63
 b20:	88 39       	cpi	r24, 0x98	; 152
 b22:	20 f0       	brcs	.+8      	; 0xb2c <log+0x3c>
 b24:	80 3e       	cpi	r24, 0xE0	; 224
 b26:	30 f0       	brcs	.+12     	; 0xb34 <log+0x44>
 b28:	21 96       	adiw	r28, 0x01	; 1
 b2a:	8f 77       	andi	r24, 0x7F	; 127
 b2c:	0f dd       	rcall	.-1506   	; 0x54c <__addsf3>
 b2e:	e4 eb       	ldi	r30, 0xB4	; 180
 b30:	f0 e0       	ldi	r31, 0x00	; 0
 b32:	03 c0       	rjmp	.+6      	; 0xb3a <log+0x4a>
 b34:	0b dd       	rcall	.-1514   	; 0x54c <__addsf3>
 b36:	e1 ee       	ldi	r30, 0xE1	; 225
 b38:	f0 e0       	ldi	r31, 0x00	; 0
 b3a:	73 df       	rcall	.-282    	; 0xa22 <__fp_powser>
 b3c:	8b 01       	movw	r16, r22
 b3e:	be 01       	movw	r22, r28
 b40:	ec 01       	movw	r28, r24
 b42:	fb 2e       	mov	r15, r27
 b44:	6f 57       	subi	r22, 0x7F	; 127
 b46:	71 09       	sbc	r23, r1
 b48:	75 95       	asr	r23
 b4a:	77 1f       	adc	r23, r23
 b4c:	88 0b       	sbc	r24, r24
 b4e:	99 0b       	sbc	r25, r25
 b50:	fc dd       	rcall	.-1032   	; 0x74a <__floatsisf>
 b52:	28 e1       	ldi	r18, 0x18	; 24
 b54:	32 e7       	ldi	r19, 0x72	; 114
 b56:	41 e3       	ldi	r20, 0x31	; 49
 b58:	5f e3       	ldi	r21, 0x3F	; 63
 b5a:	8f de       	rcall	.-738    	; 0x87a <__mulsf3x>
 b5c:	af 2d       	mov	r26, r15
 b5e:	98 01       	movw	r18, r16
 b60:	ae 01       	movw	r20, r28
 b62:	ff 90       	pop	r15
 b64:	0f 91       	pop	r16
 b66:	1f 91       	pop	r17
 b68:	cf 91       	pop	r28
 b6a:	df 91       	pop	r29
 b6c:	00 dd       	rcall	.-1536   	; 0x56e <__addsf3x>
 b6e:	3f ce       	rjmp	.-898    	; 0x7ee <__fp_round>

00000b70 <modf>:
 b70:	fa 01       	movw	r30, r20
 b72:	dc 01       	movw	r26, r24
 b74:	aa 0f       	add	r26, r26
 b76:	bb 1f       	adc	r27, r27
 b78:	9b 01       	movw	r18, r22
 b7a:	ac 01       	movw	r20, r24
 b7c:	bf 57       	subi	r27, 0x7F	; 127
 b7e:	28 f4       	brcc	.+10     	; 0xb8a <modf+0x1a>
 b80:	22 27       	eor	r18, r18
 b82:	33 27       	eor	r19, r19
 b84:	44 27       	eor	r20, r20
 b86:	50 78       	andi	r21, 0x80	; 128
 b88:	1f c0       	rjmp	.+62     	; 0xbc8 <modf+0x58>
 b8a:	b7 51       	subi	r27, 0x17	; 23
 b8c:	88 f4       	brcc	.+34     	; 0xbb0 <modf+0x40>
 b8e:	ab 2f       	mov	r26, r27
 b90:	00 24       	eor	r0, r0
 b92:	46 95       	lsr	r20
 b94:	37 95       	ror	r19
 b96:	27 95       	ror	r18
 b98:	01 1c       	adc	r0, r1
 b9a:	a3 95       	inc	r26
 b9c:	d2 f3       	brmi	.-12     	; 0xb92 <modf+0x22>
 b9e:	00 20       	and	r0, r0
 ba0:	69 f0       	breq	.+26     	; 0xbbc <modf+0x4c>
 ba2:	22 0f       	add	r18, r18
 ba4:	33 1f       	adc	r19, r19
 ba6:	44 1f       	adc	r20, r20
 ba8:	b3 95       	inc	r27
 baa:	da f3       	brmi	.-10     	; 0xba2 <modf+0x32>
 bac:	0d d0       	rcall	.+26     	; 0xbc8 <modf+0x58>
 bae:	cd cc       	rjmp	.-1638   	; 0x54a <__subsf3>
 bb0:	61 30       	cpi	r22, 0x01	; 1
 bb2:	71 05       	cpc	r23, r1
 bb4:	a0 e8       	ldi	r26, 0x80	; 128
 bb6:	8a 07       	cpc	r24, r26
 bb8:	b9 46       	sbci	r27, 0x69	; 105
 bba:	30 f4       	brcc	.+12     	; 0xbc8 <modf+0x58>
 bbc:	9b 01       	movw	r18, r22
 bbe:	ac 01       	movw	r20, r24
 bc0:	66 27       	eor	r22, r22
 bc2:	77 27       	eor	r23, r23
 bc4:	88 27       	eor	r24, r24
 bc6:	90 78       	andi	r25, 0x80	; 128
 bc8:	30 96       	adiw	r30, 0x00	; 0
 bca:	21 f0       	breq	.+8      	; 0xbd4 <modf+0x64>
 bcc:	20 83       	st	Z, r18
 bce:	31 83       	std	Z+1, r19	; 0x01
 bd0:	42 83       	std	Z+2, r20	; 0x02
 bd2:	53 83       	std	Z+3, r21	; 0x03
 bd4:	08 95       	ret

00000bd6 <__fp_mpack>:
 bd6:	9f 3f       	cpi	r25, 0xFF	; 255
 bd8:	31 f0       	breq	.+12     	; 0xbe6 <__fp_mpack_finite+0xc>

00000bda <__fp_mpack_finite>:
 bda:	91 50       	subi	r25, 0x01	; 1
 bdc:	20 f4       	brcc	.+8      	; 0xbe6 <__fp_mpack_finite+0xc>
 bde:	87 95       	ror	r24
 be0:	77 95       	ror	r23
 be2:	67 95       	ror	r22
 be4:	b7 95       	ror	r27
 be6:	88 0f       	add	r24, r24
 be8:	91 1d       	adc	r25, r1
 bea:	96 95       	lsr	r25
 bec:	87 95       	ror	r24
 bee:	97 f9       	bld	r25, 7
 bf0:	08 95       	ret

00000bf2 <__divmodhi4>:
 bf2:	97 fb       	bst	r25, 7
 bf4:	07 2e       	mov	r0, r23
 bf6:	16 f4       	brtc	.+4      	; 0xbfc <__divmodhi4+0xa>
 bf8:	00 94       	com	r0
 bfa:	06 d0       	rcall	.+12     	; 0xc08 <__divmodhi4_neg1>
 bfc:	77 fd       	sbrc	r23, 7
 bfe:	08 d0       	rcall	.+16     	; 0xc10 <__divmodhi4_neg2>
 c00:	0b d0       	rcall	.+22     	; 0xc18 <__udivmodhi4>
 c02:	07 fc       	sbrc	r0, 7
 c04:	05 d0       	rcall	.+10     	; 0xc10 <__divmodhi4_neg2>
 c06:	3e f4       	brtc	.+14     	; 0xc16 <__divmodhi4_exit>

00000c08 <__divmodhi4_neg1>:
 c08:	90 95       	com	r25
 c0a:	81 95       	neg	r24
 c0c:	9f 4f       	sbci	r25, 0xFF	; 255
 c0e:	08 95       	ret

00000c10 <__divmodhi4_neg2>:
 c10:	70 95       	com	r23
 c12:	61 95       	neg	r22
 c14:	7f 4f       	sbci	r23, 0xFF	; 255

00000c16 <__divmodhi4_exit>:
 c16:	08 95       	ret

00000c18 <__udivmodhi4>:
 c18:	aa 1b       	sub	r26, r26
 c1a:	bb 1b       	sub	r27, r27
 c1c:	51 e1       	ldi	r21, 0x11	; 17
 c1e:	07 c0       	rjmp	.+14     	; 0xc2e <__udivmodhi4_ep>

00000c20 <__udivmodhi4_loop>:
 c20:	aa 1f       	adc	r26, r26
 c22:	bb 1f       	adc	r27, r27
 c24:	a6 17       	cp	r26, r22
 c26:	b7 07       	cpc	r27, r23
 c28:	10 f0       	brcs	.+4      	; 0xc2e <__udivmodhi4_ep>
 c2a:	a6 1b       	sub	r26, r22
 c2c:	b7 0b       	sbc	r27, r23

00000c2e <__udivmodhi4_ep>:
 c2e:	88 1f       	adc	r24, r24
 c30:	99 1f       	adc	r25, r25
 c32:	5a 95       	dec	r21
 c34:	a9 f7       	brne	.-22     	; 0xc20 <__udivmodhi4_loop>
 c36:	80 95       	com	r24
 c38:	90 95       	com	r25
 c3a:	bc 01       	movw	r22, r24
 c3c:	cd 01       	movw	r24, r26
 c3e:	08 95       	ret

00000c40 <_exit>:
 c40:	f8 94       	cli

00000c42 <__stop_program>:
 c42:	ff cf       	rjmp	.-2      	; 0xc42 <__stop_program>
